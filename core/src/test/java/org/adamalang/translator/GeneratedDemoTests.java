/* The Adama Programming Language For Board Games!
 *    See http://www.adama-lang.org/ for more information.
 * (c) copyright 2020 Jeffrey M. Barber (http://jeffrey.io) */
package org.adamalang.translator;

import org.junit.Test;

public class GeneratedDemoTests extends GeneratedBase {
  private String cached_Bomb_1 = null;
  private String get_Bomb_1() {
    if (cached_Bomb_1 != null) {
      return cached_Bomb_1;
    }
    cached_Bomb_1 = generateTestOutput(true, "Bomb_1", "./test_code/Demo_Bomb_success.a");
    return cached_Bomb_1;
  }

  @Test
  public void testBombEmission() {
    assertEmissionGood(get_Bomb_1());
  }

  @Test
  public void testBombSuccess() {
    assertLivePass(get_Bomb_1());
  }

  @Test
  public void testBombGoodWillHappy() {
    assertGoodWillHappy(get_Bomb_1());
  }

  @Test
  public void testBombExceptionFree() {
    assertExceptionFree(get_Bomb_1());
  }

  @Test
  public void testBombTODOFree() {
    assertTODOFree(get_Bomb_1());
  }

  @Test
  public void stable_Bomb_1() {
    String live = get_Bomb_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:.\\test_code\\Demo_Bomb_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[ ]");
    gold.append("\n--JAVA---------------------------------------------");
    gold.append("\nimport com.fasterxml.jackson.databind.JsonNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ArrayNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ObjectNode;");
    gold.append("\nimport org.adamalang.runtime.*;");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.bridges.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class Bomb_1 extends LivingDocument {");
    gold.append("\n  private final RxString x;");
    gold.append("\n  private final RxInt32 k;");
    gold.append("\n  public Bomb_1(ObjectNode __root, DocumentMonitor __monitor) {");
    gold.append("\n    super(__root, __monitor);");
    gold.append("\n    x = RxFactory.makeRxString(this, __root, \"x\", \"\");");
    gold.append("\n    k = RxFactory.makeRxInt32(this, __root, \"k\", 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, ObjectNode __delta) {");
    gold.append("\n    ObjectNode __child = __delta;");
    gold.append("\n    __state.__commit(\"__state\", __child);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __child);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __child);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __child);");
    gold.append("\n    __seq.__commit(\"__seq\", __child);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __child);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __child);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __child);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __child);");
    gold.append("\n    __time.__commit(\"__time\", __child);");
    gold.append("\n    x.__commit(\"x\", __child);");
    gold.append("\n    k.__commit(\"k\", __child);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    k.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public JsonNode getPrivateViewFor(NtClient __who) {");
    gold.append("\n    if (!(true)) {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    ObjectNode __view = Utility.createObjectNode();");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"x\", NativeBridge.STRING_NATIVE_SUPPORT.toPrivateJsonNode(__who, x.get()));");
    gold.append("\n    return __view;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  private void __step_game_setup() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(0);");
    gold.append("\n    x.set(\"Initializing Device\");");
    gold.append("\n    __track(1);");
    gold.append("\n    k.set(0);");
    gold.append("\n    __track(2);");
    gold.append("\n    __transitionStateMachine(\"tick\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_tick() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(3);");
    gold.append("\n    x.set(\"Tick\");");
    gold.append("\n    __track(4);");
    gold.append("\n    __transitionStateMachine(\"tock\", 0.5);");
    gold.append("\n  }");
    gold.append("\n  private void __step_tock() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(5);");
    gold.append("\n    x.set(\"Tock\");");
    gold.append("\n    __track(6);");
    gold.append("\n    k.bumpUpPost();");
    gold.append("\n    __track(7);");
    gold.append("\n    __transitionStateMachine((k.get() < 10 ? \"tick\" : \"end\"), 0.5);");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(8);");
    gold.append("\n    x.set(\"Boom!!!!\");");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"game_setup\":");
    gold.append("\n        __step_game_setup();");
    gold.append("\n        return;");
    gold.append("\n      case \"tick\":");
    gold.append("\n        __step_tick();");
    gold.append("\n        return;");
    gold.append("\n      case \"tock\":");
    gold.append("\n        __step_tock();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(NtClient who){");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(9);");
    gold.append("\n    return (who.equals(NtClient.NO_ONE));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(NtClient __who, ObjectNode __message) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(10);");
    gold.append("\n    __transitionStateMachine(\"game_setup\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, ObjectNode message) {");
    gold.append("\n    __construct_0(who, message);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{}}-->{\"__state\":\"game_setup\",\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seedUsed\":\"0\",\"__state\":\"tick\",!TimeHiddenForStability!\"25\",\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\",\"x\":\"Initializing Device\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seedUsed\":\"-4962768465676381896\",\"__state\":\"tock\",!TimeHiddenForStability!\"550\",\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"300\"}-->{\"__messages\":null,\"__seedUsed\":\"4804307197456638271\",\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"300\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"425\"}-->{\"__messages\":null,\"__seedUsed\":\"-1034601897293430941\",\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"425\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"487\"}-->{\"__messages\":null,\"__seedUsed\":\"7848011421992302230\",\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"487\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"518\"}-->{\"__messages\":null,\"__seedUsed\":\"-8929183248358367000\",\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"518\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"543\"}-->{\"__messages\":null,\"__seedUsed\":\"488730542833106255\",\"__seq\":7,\"__entropy\":\"5082315122564986995\",\"__time\":\"543\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"568\"}-->{\"__messages\":null,\"__seedUsed\":\"5082315122564986995\",\"__state\":\"tick\",!TimeHiddenForStability!\"1068\",\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__time\":\"568\",\"x\":\"Tock\",\"k\":1} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"818\"}-->{\"__messages\":null,\"__seedUsed\":\"-4023469995120514721\",\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"818\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"943\"}-->{\"__messages\":null,\"__seedUsed\":\"-652523483647487500\",\"__seq\":10,\"__entropy\":\"733208966369662072\",\"__time\":\"943\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1005\"}-->{\"__messages\":null,\"__seedUsed\":\"733208966369662072\",\"__seq\":11,\"__entropy\":\"-2859003968966358305\",\"__time\":\"1005\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1036\"}-->{\"__messages\":null,\"__seedUsed\":\"-2859003968966358305\",\"__seq\":12,\"__entropy\":\"2391129358218448901\",\"__time\":\"1036\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1061\"}-->{\"__messages\":null,\"__seedUsed\":\"2391129358218448901\",\"__seq\":13,\"__entropy\":\"462804890636782426\",\"__time\":\"1061\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1086\"}-->{\"__messages\":null,\"__seedUsed\":\"462804890636782426\",\"__state\":\"tock\",!TimeHiddenForStability!\"1586\",\"__seq\":14,\"__entropy\":\"4152650890530247911\",\"__time\":\"1086\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1336\"}-->{\"__messages\":null,\"__seedUsed\":\"4152650890530247911\",\"__seq\":15,\"__entropy\":\"-7824937040248809533\",\"__time\":\"1336\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1461\"}-->{\"__messages\":null,\"__seedUsed\":\"-7824937040248809533\",\"__seq\":16,\"__entropy\":\"-7423161351415864473\",\"__time\":\"1461\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1523\"}-->{\"__messages\":null,\"__seedUsed\":\"-7423161351415864473\",\"__seq\":17,\"__entropy\":\"-1712070416600608528\",\"__time\":\"1523\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1554\"}-->{\"__messages\":null,\"__seedUsed\":\"-1712070416600608528\",\"__seq\":18,\"__entropy\":\"-7558503418509576542\",\"__time\":\"1554\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1579\"}-->{\"__messages\":null,\"__seedUsed\":\"-7558503418509576542\",\"__seq\":19,\"__entropy\":\"-1602231814014388968\",\"__time\":\"1579\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1604\"}-->{\"__messages\":null,\"__seedUsed\":\"-1602231814014388968\",\"__state\":\"tick\",!TimeHiddenForStability!\"2104\",\"__seq\":20,\"__entropy\":\"-8398198349610176347\",\"__time\":\"1604\",\"x\":\"Tock\",\"k\":2} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1854\"}-->{\"__messages\":null,\"__seedUsed\":\"-8398198349610176347\",\"__seq\":21,\"__entropy\":\"8543763135442756639\",\"__time\":\"1854\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1979\"}-->{\"__messages\":null,\"__seedUsed\":\"8543763135442756639\",\"__seq\":22,\"__entropy\":\"-6771948130860443991\",\"__time\":\"1979\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2041\"}-->{\"__messages\":null,\"__seedUsed\":\"-6771948130860443991\",\"__seq\":23,\"__entropy\":\"-6872183637580745469\",\"__time\":\"2041\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2072\"}-->{\"__messages\":null,\"__seedUsed\":\"-6872183637580745469\",\"__seq\":24,\"__entropy\":\"-4362937514027401353\",\"__time\":\"2072\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2097\"}-->{\"__messages\":null,\"__seedUsed\":\"-4362937514027401353\",\"__seq\":25,\"__entropy\":\"-645818057311197652\",\"__time\":\"2097\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2122\"}-->{\"__messages\":null,\"__seedUsed\":\"-645818057311197652\",\"__state\":\"tock\",!TimeHiddenForStability!\"2622\",\"__seq\":26,\"__entropy\":\"-2589363629201395742\",\"__time\":\"2122\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2372\"}-->{\"__messages\":null,\"__seedUsed\":\"-2589363629201395742\",\"__seq\":27,\"__entropy\":\"-1292473327617944349\",\"__time\":\"2372\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2497\"}-->{\"__messages\":null,\"__seedUsed\":\"-1292473327617944349\",\"__seq\":28,\"__entropy\":\"7708962365626450022\",\"__time\":\"2497\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2559\"}-->{\"__messages\":null,\"__seedUsed\":\"7708962365626450022\",\"__seq\":29,\"__entropy\":\"-1985167797452687559\",\"__time\":\"2559\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2590\"}-->{\"__messages\":null,\"__seedUsed\":\"-1985167797452687559\",\"__seq\":30,\"__entropy\":\"-9181452172432867415\",\"__time\":\"2590\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2615\"}-->{\"__messages\":null,\"__seedUsed\":\"-9181452172432867415\",\"__seq\":31,\"__entropy\":\"5136175437742153992\",\"__time\":\"2615\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2640\"}-->{\"__messages\":null,\"__seedUsed\":\"5136175437742153992\",\"__state\":\"tick\",!TimeHiddenForStability!\"3140\",\"__seq\":32,\"__entropy\":\"2461321076443974826\",\"__time\":\"2640\",\"x\":\"Tock\",\"k\":3} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2890\"}-->{\"__messages\":null,\"__seedUsed\":\"2461321076443974826\",\"__seq\":33,\"__entropy\":\"5393678625457699973\",\"__time\":\"2890\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3015\"}-->{\"__messages\":null,\"__seedUsed\":\"5393678625457699973\",\"__seq\":34,\"__entropy\":\"-5223836593555421482\",\"__time\":\"3015\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3077\"}-->{\"__messages\":null,\"__seedUsed\":\"-5223836593555421482\",\"__seq\":35,\"__entropy\":\"4231336260356479292\",\"__time\":\"3077\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3108\"}-->{\"__messages\":null,\"__seedUsed\":\"4231336260356479292\",\"__seq\":36,\"__entropy\":\"80026624404206994\",\"__time\":\"3108\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3133\"}-->{\"__messages\":null,\"__seedUsed\":\"80026624404206994\",\"__seq\":37,\"__entropy\":\"5629798281369249587\",\"__time\":\"3133\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3158\"}-->{\"__messages\":null,\"__seedUsed\":\"5629798281369249587\",\"__state\":\"tock\",!TimeHiddenForStability!\"3658\",\"__seq\":38,\"__entropy\":\"-7970476187495257102\",\"__time\":\"3158\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3408\"}-->{\"__messages\":null,\"__seedUsed\":\"-7970476187495257102\",\"__seq\":39,\"__entropy\":\"8328412070939253235\",\"__time\":\"3408\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3533\"}-->{\"__messages\":null,\"__seedUsed\":\"8328412070939253235\",\"__seq\":40,\"__entropy\":\"8613213585075034408\",\"__time\":\"3533\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3595\"}-->{\"__messages\":null,\"__seedUsed\":\"8613213585075034408\",\"__seq\":41,\"__entropy\":\"7839281802022211816\",\"__time\":\"3595\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3626\"}-->{\"__messages\":null,\"__seedUsed\":\"7839281802022211816\",\"__seq\":42,\"__entropy\":\"605170570079111320\",\"__time\":\"3626\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3651\"}-->{\"__messages\":null,\"__seedUsed\":\"605170570079111320\",\"__seq\":43,\"__entropy\":\"-8912674914493871025\",\"__time\":\"3651\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3676\"}-->{\"__messages\":null,\"__seedUsed\":\"-8912674914493871025\",\"__state\":\"tick\",!TimeHiddenForStability!\"4176\",\"__seq\":44,\"__entropy\":\"-5429469239583332266\",\"__time\":\"3676\",\"x\":\"Tock\",\"k\":4} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3926\"}-->{\"__messages\":null,\"__seedUsed\":\"-5429469239583332266\",\"__seq\":45,\"__entropy\":\"7697740277460248409\",\"__time\":\"3926\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4051\"}-->{\"__messages\":null,\"__seedUsed\":\"7697740277460248409\",\"__seq\":46,\"__entropy\":\"6823898353758749145\",\"__time\":\"4051\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4113\"}-->{\"__messages\":null,\"__seedUsed\":\"6823898353758749145\",\"__seq\":47,\"__entropy\":\"-765888408110226152\",\"__time\":\"4113\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4144\"}-->{\"__messages\":null,\"__seedUsed\":\"-765888408110226152\",\"__seq\":48,\"__entropy\":\"1824341877410284492\",\"__time\":\"4144\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4169\"}-->{\"__messages\":null,\"__seedUsed\":\"1824341877410284492\",\"__seq\":49,\"__entropy\":\"-9095715445349070663\",\"__time\":\"4169\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4194\"}-->{\"__messages\":null,\"__seedUsed\":\"-9095715445349070663\",\"__state\":\"tock\",!TimeHiddenForStability!\"4694\",\"__seq\":50,\"__entropy\":\"-3174726495522908924\",\"__time\":\"4194\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4444\"}-->{\"__messages\":null,\"__seedUsed\":\"-3174726495522908924\",\"__seq\":51,\"__entropy\":\"-1842141481138326851\",\"__time\":\"4444\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4569\"}-->{\"__messages\":null,\"__seedUsed\":\"-1842141481138326851\",\"__seq\":52,\"__entropy\":\"4802812524751340502\",\"__time\":\"4569\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4631\"}-->{\"__messages\":null,\"__seedUsed\":\"4802812524751340502\",\"__seq\":53,\"__entropy\":\"3318693514395478995\",\"__time\":\"4631\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4662\"}-->{\"__messages\":null,\"__seedUsed\":\"3318693514395478995\",\"__seq\":54,\"__entropy\":\"7366009943671362924\",\"__time\":\"4662\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4687\"}-->{\"__messages\":null,\"__seedUsed\":\"7366009943671362924\",\"__seq\":55,\"__entropy\":\"-5219522476250189798\",\"__time\":\"4687\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4712\"}-->{\"__messages\":null,\"__seedUsed\":\"-5219522476250189798\",\"__state\":\"tick\",!TimeHiddenForStability!\"5212\",\"__seq\":56,\"__entropy\":\"5613935339826365134\",\"__time\":\"4712\",\"x\":\"Tock\",\"k\":5} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4962\"}-->{\"__messages\":null,\"__seedUsed\":\"5613935339826365134\",\"__seq\":57,\"__entropy\":\"-4047434045954786565\",\"__time\":\"4962\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5087\"}-->{\"__messages\":null,\"__seedUsed\":\"-4047434045954786565\",\"__seq\":58,\"__entropy\":\"7623585847884134637\",\"__time\":\"5087\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5149\"}-->{\"__messages\":null,\"__seedUsed\":\"7623585847884134637\",\"__seq\":59,\"__entropy\":\"-8847680883679894734\",\"__time\":\"5149\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5180\"}-->{\"__messages\":null,\"__seedUsed\":\"-8847680883679894734\",\"__seq\":60,\"__entropy\":\"-929135895385462233\",\"__time\":\"5180\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5205\"}-->{\"__messages\":null,\"__seedUsed\":\"-929135895385462233\",\"__seq\":61,\"__entropy\":\"3316956553108501580\",\"__time\":\"5205\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5230\"}-->{\"__messages\":null,\"__seedUsed\":\"3316956553108501580\",\"__state\":\"tock\",!TimeHiddenForStability!\"5730\",\"__seq\":62,\"__entropy\":\"6881228783152519327\",\"__time\":\"5230\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5480\"}-->{\"__messages\":null,\"__seedUsed\":\"6881228783152519327\",\"__seq\":63,\"__entropy\":\"2588941789082157640\",\"__time\":\"5480\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5605\"}-->{\"__messages\":null,\"__seedUsed\":\"2588941789082157640\",\"__seq\":64,\"__entropy\":\"-2753861383051875976\",\"__time\":\"5605\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5667\"}-->{\"__messages\":null,\"__seedUsed\":\"-2753861383051875976\",\"__seq\":65,\"__entropy\":\"63521059591325732\",\"__time\":\"5667\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5698\"}-->{\"__messages\":null,\"__seedUsed\":\"63521059591325732\",\"__seq\":66,\"__entropy\":\"-2508418585031165801\",\"__time\":\"5698\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5723\"}-->{\"__messages\":null,\"__seedUsed\":\"-2508418585031165801\",\"__seq\":67,\"__entropy\":\"-1129347891973927280\",\"__time\":\"5723\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5748\"}-->{\"__messages\":null,\"__seedUsed\":\"-1129347891973927280\",\"__state\":\"tick\",!TimeHiddenForStability!\"6248\",\"__seq\":68,\"__entropy\":\"9054633673849498218\",\"__time\":\"5748\",\"x\":\"Tock\",\"k\":6} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5998\"}-->{\"__messages\":null,\"__seedUsed\":\"9054633673849498218\",\"__seq\":69,\"__entropy\":\"-4718249889278840619\",\"__time\":\"5998\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6123\"}-->{\"__messages\":null,\"__seedUsed\":\"-4718249889278840619\",\"__seq\":70,\"__entropy\":\"-441398695570079353\",\"__time\":\"6123\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6185\"}-->{\"__messages\":null,\"__seedUsed\":\"-441398695570079353\",\"__seq\":71,\"__entropy\":\"-1590964802480462460\",\"__time\":\"6185\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6216\"}-->{\"__messages\":null,\"__seedUsed\":\"-1590964802480462460\",\"__seq\":72,\"__entropy\":\"8358116205139703580\",\"__time\":\"6216\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6241\"}-->{\"__messages\":null,\"__seedUsed\":\"8358116205139703580\",\"__seq\":73,\"__entropy\":\"-6363057154176323830\",\"__time\":\"6241\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6266\"}-->{\"__messages\":null,\"__seedUsed\":\"-6363057154176323830\",\"__state\":\"tock\",!TimeHiddenForStability!\"6766\",\"__seq\":74,\"__entropy\":\"5902287618822687882\",\"__time\":\"6266\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6516\"}-->{\"__messages\":null,\"__seedUsed\":\"5902287618822687882\",\"__seq\":75,\"__entropy\":\"774240631672948476\",\"__time\":\"6516\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6641\"}-->{\"__messages\":null,\"__seedUsed\":\"774240631672948476\",\"__seq\":76,\"__entropy\":\"-1280523540108581397\",\"__time\":\"6641\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6703\"}-->{\"__messages\":null,\"__seedUsed\":\"-1280523540108581397\",\"__seq\":77,\"__entropy\":\"-5403519697878124848\",\"__time\":\"6703\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6734\"}-->{\"__messages\":null,\"__seedUsed\":\"-5403519697878124848\",\"__seq\":78,\"__entropy\":\"4290694460975658285\",\"__time\":\"6734\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6759\"}-->{\"__messages\":null,\"__seedUsed\":\"4290694460975658285\",\"__seq\":79,\"__entropy\":\"8937230293740383692\",\"__time\":\"6759\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6784\"}-->{\"__messages\":null,\"__seedUsed\":\"8937230293740383692\",\"__state\":\"tick\",!TimeHiddenForStability!\"7284\",\"__seq\":80,\"__entropy\":\"637756062700604208\",\"__time\":\"6784\",\"x\":\"Tock\",\"k\":7} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7034\"}-->{\"__messages\":null,\"__seedUsed\":\"637756062700604208\",\"__seq\":81,\"__entropy\":\"1158036814397300191\",\"__time\":\"7034\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7159\"}-->{\"__messages\":null,\"__seedUsed\":\"1158036814397300191\",\"__seq\":82,\"__entropy\":\"1836765803523210232\",\"__time\":\"7159\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7221\"}-->{\"__messages\":null,\"__seedUsed\":\"1836765803523210232\",\"__seq\":83,\"__entropy\":\"-1395491906276510494\",\"__time\":\"7221\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7252\"}-->{\"__messages\":null,\"__seedUsed\":\"-1395491906276510494\",\"__seq\":84,\"__entropy\":\"-5543361751294373759\",\"__time\":\"7252\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7277\"}-->{\"__messages\":null,\"__seedUsed\":\"-5543361751294373759\",\"__seq\":85,\"__entropy\":\"4175850921494908275\",\"__time\":\"7277\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7302\"}-->{\"__messages\":null,\"__seedUsed\":\"4175850921494908275\",\"__state\":\"tock\",!TimeHiddenForStability!\"7802\",\"__seq\":86,\"__entropy\":\"1033858561125600546\",\"__time\":\"7302\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7552\"}-->{\"__messages\":null,\"__seedUsed\":\"1033858561125600546\",\"__seq\":87,\"__entropy\":\"-3164893194336604692\",\"__time\":\"7552\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7677\"}-->{\"__messages\":null,\"__seedUsed\":\"-3164893194336604692\",\"__seq\":88,\"__entropy\":\"-5852320475388809844\",\"__time\":\"7677\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7739\"}-->{\"__messages\":null,\"__seedUsed\":\"-5852320475388809844\",\"__seq\":89,\"__entropy\":\"-7272659416417678250\",\"__time\":\"7739\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7770\"}-->{\"__messages\":null,\"__seedUsed\":\"-7272659416417678250\",\"__seq\":90,\"__entropy\":\"8175958839185669940\",\"__time\":\"7770\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7795\"}-->{\"__messages\":null,\"__seedUsed\":\"8175958839185669940\",\"__seq\":91,\"__entropy\":\"4179054780937916854\",\"__time\":\"7795\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7820\"}-->{\"__messages\":null,\"__seedUsed\":\"4179054780937916854\",\"__state\":\"tick\",!TimeHiddenForStability!\"8320\",\"__seq\":92,\"__entropy\":\"2662270167450393994\",\"__time\":\"7820\",\"x\":\"Tock\",\"k\":8} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8070\"}-->{\"__messages\":null,\"__seedUsed\":\"2662270167450393994\",\"__seq\":93,\"__entropy\":\"-1317396161158834472\",\"__time\":\"8070\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8195\"}-->{\"__messages\":null,\"__seedUsed\":\"-1317396161158834472\",\"__seq\":94,\"__entropy\":\"3084598864010009997\",\"__time\":\"8195\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8257\"}-->{\"__messages\":null,\"__seedUsed\":\"3084598864010009997\",\"__seq\":95,\"__entropy\":\"-7771882791412177980\",\"__time\":\"8257\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8288\"}-->{\"__messages\":null,\"__seedUsed\":\"-7771882791412177980\",\"__seq\":96,\"__entropy\":\"-8608999492947178165\",\"__time\":\"8288\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8313\"}-->{\"__messages\":null,\"__seedUsed\":\"-8608999492947178165\",\"__seq\":97,\"__entropy\":\"-4234437162840137118\",\"__time\":\"8313\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8338\"}-->{\"__messages\":null,\"__seedUsed\":\"-4234437162840137118\",\"__state\":\"tock\",!TimeHiddenForStability!\"8838\",\"__seq\":98,\"__entropy\":\"-2023745003703699549\",\"__time\":\"8338\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8588\"}-->{\"__messages\":null,\"__seedUsed\":\"-2023745003703699549\",\"__seq\":99,\"__entropy\":\"69754625514060559\",\"__time\":\"8588\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8713\"}-->{\"__messages\":null,\"__seedUsed\":\"69754625514060559\",\"__seq\":100,\"__entropy\":\"-3473555844301792686\",\"__time\":\"8713\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8775\"}-->{\"__messages\":null,\"__seedUsed\":\"-3473555844301792686\",\"__seq\":101,\"__entropy\":\"8768369942756241893\",\"__time\":\"8775\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8806\"}-->{\"__messages\":null,\"__seedUsed\":\"8768369942756241893\",\"__seq\":102,\"__entropy\":\"7070763217551653067\",\"__time\":\"8806\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8831\"}-->{\"__messages\":null,\"__seedUsed\":\"7070763217551653067\",\"__seq\":103,\"__entropy\":\"-6319753005139232963\",\"__time\":\"8831\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8856\"}-->{\"__messages\":null,\"__seedUsed\":\"-6319753005139232963\",\"__state\":\"tick\",!TimeHiddenForStability!\"9356\",\"__seq\":104,\"__entropy\":\"-3700292770926331275\",\"__time\":\"8856\",\"x\":\"Tock\",\"k\":9} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9106\"}-->{\"__messages\":null,\"__seedUsed\":\"-3700292770926331275\",\"__seq\":105,\"__entropy\":\"2661324861758524799\",\"__time\":\"9106\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9231\"}-->{\"__messages\":null,\"__seedUsed\":\"2661324861758524799\",\"__seq\":106,\"__entropy\":\"-4034329546783367578\",\"__time\":\"9231\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9293\"}-->{\"__messages\":null,\"__seedUsed\":\"-4034329546783367578\",\"__seq\":107,\"__entropy\":\"5217474497427191714\",\"__time\":\"9293\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9324\"}-->{\"__messages\":null,\"__seedUsed\":\"5217474497427191714\",\"__seq\":108,\"__entropy\":\"4557381070437736467\",\"__time\":\"9324\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9349\"}-->{\"__messages\":null,\"__seedUsed\":\"4557381070437736467\",\"__seq\":109,\"__entropy\":\"8298876881210862740\",\"__time\":\"9349\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9374\"}-->{\"__messages\":null,\"__seedUsed\":\"8298876881210862740\",\"__state\":\"tock\",!TimeHiddenForStability!\"9874\",\"__seq\":110,\"__entropy\":\"3142015020570690030\",\"__time\":\"9374\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9624\"}-->{\"__messages\":null,\"__seedUsed\":\"3142015020570690030\",\"__seq\":111,\"__entropy\":\"4976671713676084635\",\"__time\":\"9624\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9749\"}-->{\"__messages\":null,\"__seedUsed\":\"4976671713676084635\",\"__seq\":112,\"__entropy\":\"1916394321225775893\",\"__time\":\"9749\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9811\"}-->{\"__messages\":null,\"__seedUsed\":\"1916394321225775893\",\"__seq\":113,\"__entropy\":\"-1819491950855354448\",\"__time\":\"9811\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9842\"}-->{\"__messages\":null,\"__seedUsed\":\"-1819491950855354448\",\"__seq\":114,\"__entropy\":\"-1502392105200697943\",\"__time\":\"9842\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9867\"}-->{\"__messages\":null,\"__seedUsed\":\"-1502392105200697943\",\"__seq\":115,\"__entropy\":\"5191188431328708458\",\"__time\":\"9867\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9892\"}-->{\"__messages\":null,\"__seedUsed\":\"5191188431328708458\",\"__state\":\"end\",!TimeHiddenForStability!\"10392\",\"__seq\":116,\"__entropy\":\"5314181585750775431\",\"__time\":\"9892\",\"x\":\"Tock\",\"k\":10} need:true in:500");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10142\"}-->{\"__messages\":null,\"__seedUsed\":\"5314181585750775431\",\"__seq\":117,\"__entropy\":\"-8043414492270390913\",\"__time\":\"10142\"} need:true in:250");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10267\"}-->{\"__messages\":null,\"__seedUsed\":\"-8043414492270390913\",\"__seq\":118,\"__entropy\":\"-6045053984042702041\",\"__time\":\"10267\"} need:true in:125");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10329\"}-->{\"__messages\":null,\"__seedUsed\":\"-6045053984042702041\",\"__seq\":119,\"__entropy\":\"-7957219997404758563\",\"__time\":\"10329\"} need:true in:63");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10360\"}-->{\"__messages\":null,\"__seedUsed\":\"-7957219997404758563\",\"__seq\":120,\"__entropy\":\"8615810463785047703\",\"__time\":\"10360\"} need:true in:32");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10385\"}-->{\"__messages\":null,\"__seedUsed\":\"8615810463785047703\",\"__seq\":121,\"__entropy\":\"-2923247105911884308\",\"__time\":\"10385\"} need:true in:7");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10410\"}-->{\"__messages\":null,\"__seedUsed\":\"-2923247105911884308\",\"__state\":\"\",\"__seq\":122,\"__entropy\":\"-9206926828484168278\",\"__time\":\"10410\",\"x\":\"Boom!!!!\"} need:false in:-18");
    gold.append("\n{\"command\":\"bill\",\"timestamp\":\"10435\"}-->{\"__goodwill_used\":0,\"__cost\":78,\"__billing_seq\":122} need:true in:0");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__entropy\":\"-9206926828484168278\",\"__seedUsed\":\"-2923247105911884308\",!TimeHiddenForStability!\"10392\",\"__seq\":122,\"__time\":\"10410\",\"x\":\"Boom!!!!\",\"k\":10,\"__goodwill_used\":0,\"__cost\":78,\"__billing_seq\":122}");
    gold.append("\n--PRIVACY QUERIES----------------------------------");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"10460\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"}}-->{\"__seq\":123,\"__connection_id\":1,\"__time\":\"10460\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10485\"}-->{\"__messages\":null,\"__seedUsed\":\"-9206926828484168278\",\"__seq\":124,\"__entropy\":\"8449893403675184790\",\"__time\":\"10485\"} need:false in:-93");
    gold.append("\nAS NO_ONE:{\"data\":{\"x\":\"Boom!!!!\"},\"outstanding\":[],\"blockers\":[]}");
    gold.append("\nRANDO was DENIED");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_GameHearts_2 = null;
  private String get_GameHearts_2() {
    if (cached_GameHearts_2 != null) {
      return cached_GameHearts_2;
    }
    cached_GameHearts_2 = generateTestOutput(true, "GameHearts_2", "./test_code/Demo_GameHearts_success.a");
    return cached_GameHearts_2;
  }

  @Test
  public void testGameHeartsEmission() {
    assertEmissionGood(get_GameHearts_2());
  }

  @Test
  public void testGameHeartsSuccess() {
    assertLivePass(get_GameHearts_2());
  }

  @Test
  public void testGameHeartsGoodWillHappy() {
    assertGoodWillHappy(get_GameHearts_2());
  }

  @Test
  public void testGameHeartsExceptionFree() {
    assertExceptionFree(get_GameHearts_2());
  }

  @Test
  public void testGameHeartsTODOFree() {
    assertTODOFree(get_GameHearts_2());
  }

  @Test
  public void stable_GameHearts_2() {
    String live = get_GameHearts_2();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:.\\test_code\\Demo_GameHearts_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[ ]");
    gold.append("\n--JAVA---------------------------------------------");
    gold.append("\nimport com.fasterxml.jackson.databind.JsonNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ArrayNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ObjectNode;");
    gold.append("\nimport org.adamalang.runtime.*;");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.bridges.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class GameHearts_2 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxCard> deck;");
    gold.append("\n  private final RxLazy<NtList<RTxCard>> hand;");
    gold.append("\n  private final RxClient owner;");
    gold.append("\n  private final RxTable<RTxPlayer> players;");
    gold.append("\n  private final RxLazy<Integer> players_connected;");
    gold.append("\n  private final RxLazy<Integer> observers_connected;");
    gold.append("\n  private final RxLazy<NtList<RTxPlayer>> people;");
    gold.append("\n  private final RxLazy<NtList<RTxPlayer>> players_ordered;");
    gold.append("\n  private final RxLazy<Boolean> ready;");
    gold.append("\n  private final RxBoolean playing;");
    gold.append("\n  private final RxInt32 passing_mode;");
    gold.append("\n  private final RxClient player1;");
    gold.append("\n  private final RxClient player2;");
    gold.append("\n  private final RxClient player3;");
    gold.append("\n  private final RxClient player4;");
    gold.append("\n  private final RxClient current;");
    gold.append("\n  private final RxInt32 played;");
    gold.append("\n  private final RxInt32 suit_in_play;");
    gold.append("\n  private final RxBoolean points_played;");
    gold.append("\n  private final RxLazy<NtList<RTxCard>> in_play;");
    gold.append("\n  private final RxClient last_winner;");
    gold.append("\n  private final RxInt32 points_awarded;");
    gold.append("\n  private final RxGuard ___my_take;");
    gold.append("\n  public NtList<RTxCard> __COMPUTE_my_take(NtClient who) {");
    gold.append("\n    return deck.iterate(false).where(true, new __CLOSURE_WhereClause1(who));");
    gold.append("\n  }");
    gold.append("\n  public GameHearts_2(ObjectNode __root, DocumentMonitor __monitor) {");
    gold.append("\n    super(__root, __monitor);");
    gold.append("\n    deck = RxFactory.makeRxTable(__self, this, __root, \"deck\", __BRIDGE_Card);");
    gold.append("\n    hand = new RxLazy<>(this, NativeBridge.WRAP_LIST(__BRIDGE_Card), () -> (deck.iterate(false).where(true, new __CLOSURE_WhereClause0())));");
    gold.append("\n    deck.__subscribe(hand);");
    gold.append("\n    owner = RxFactory.makeRxClient(this, __root, \"owner\", NtClient.NO_ONE);");
    gold.append("\n    players = RxFactory.makeRxTable(__self, this, __root, \"players\", __BRIDGE_Player);");
    gold.append("\n    players_connected = new RxLazy<>(this, NativeBridge.INTEGER_NATIVE_SUPPORT, () -> ((players.iterate(false).where(true, new __CLOSURE_WhereClause4())).size()));");
    gold.append("\n    players.__subscribe(players_connected);");
    gold.append("\n    observers_connected = new RxLazy<>(this, NativeBridge.INTEGER_NATIVE_SUPPORT, () -> ((players.iterate(false).where(true, new __CLOSURE_WhereClause5())).size()));");
    gold.append("\n    players.__subscribe(observers_connected);");
    gold.append("\n    people = new RxLazy<>(this, NativeBridge.WRAP_LIST(__BRIDGE_Player), () -> (players.iterate(false).orderBy(true, __ORDER_Player_play_order_a)));");
    gold.append("\n    players.__subscribe(people);");
    gold.append("\n    players_ordered = new RxLazy<>(this, NativeBridge.WRAP_LIST(__BRIDGE_Player), () -> (players.iterate(false).where(false, new __CLOSURE_WhereClause6()).orderBy(true, __ORDER_Player_play_order_a)));");
    gold.append("\n    players.__subscribe(players_ordered);");
    gold.append("\n    ready = new RxLazy<>(this, NativeBridge.BOOLEAN_NATIVE_SUPPORT, () -> (players_connected.get() == 4));");
    gold.append("\n    players_connected.__subscribe(ready);");
    gold.append("\n    playing = RxFactory.makeRxBoolean(this, __root, \"playing\", false);");
    gold.append("\n    passing_mode = RxFactory.makeRxInt32(this, __root, \"passing_mode\", 0);");
    gold.append("\n    player1 = RxFactory.makeRxClient(this, __root, \"player1\", NtClient.NO_ONE);");
    gold.append("\n    player2 = RxFactory.makeRxClient(this, __root, \"player2\", NtClient.NO_ONE);");
    gold.append("\n    player3 = RxFactory.makeRxClient(this, __root, \"player3\", NtClient.NO_ONE);");
    gold.append("\n    player4 = RxFactory.makeRxClient(this, __root, \"player4\", NtClient.NO_ONE);");
    gold.append("\n    current = RxFactory.makeRxClient(this, __root, \"current\", NtClient.NO_ONE);");
    gold.append("\n    played = RxFactory.makeRxInt32(this, __root, \"played\", 0);");
    gold.append("\n    suit_in_play = RxFactory.makeRxInt32(this, __root, \"suit_in_play\", 1);");
    gold.append("\n    points_played = RxFactory.makeRxBoolean(this, __root, \"points_played\", false);");
    gold.append("\n    in_play = new RxLazy<>(this, NativeBridge.WRAP_LIST(__BRIDGE_Card), () -> (deck.iterate(false).where(false, new __CLOSURE_WhereClause33()).orderBy(true, __ORDER_Card_rank_d)));");
    gold.append("\n    deck.__subscribe(in_play);");
    gold.append("\n    last_winner = RxFactory.makeRxClient(this, __root, \"last_winner\", NtClient.NO_ONE);");
    gold.append("\n    points_awarded = RxFactory.makeRxInt32(this, __root, \"points_awarded\", 0);");
    gold.append("\n    ___my_take =  new RxGuard();");
    gold.append("\n    deck.__subscribe(___my_take);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, ObjectNode __delta) {");
    gold.append("\n    ObjectNode __child = __delta;");
    gold.append("\n    __state.__commit(\"__state\", __child);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __child);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __child);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __child);");
    gold.append("\n    __seq.__commit(\"__seq\", __child);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __child);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __child);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __child);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __child);");
    gold.append("\n    __time.__commit(\"__time\", __child);");
    gold.append("\n    deck.__commit(\"deck\", __child);");
    gold.append("\n    owner.__commit(\"owner\", __child);");
    gold.append("\n    players.__commit(\"players\", __child);");
    gold.append("\n    playing.__commit(\"playing\", __child);");
    gold.append("\n    passing_mode.__commit(\"passing_mode\", __child);");
    gold.append("\n    player1.__commit(\"player1\", __child);");
    gold.append("\n    player2.__commit(\"player2\", __child);");
    gold.append("\n    player3.__commit(\"player3\", __child);");
    gold.append("\n    player4.__commit(\"player4\", __child);");
    gold.append("\n    current.__commit(\"current\", __child);");
    gold.append("\n    played.__commit(\"played\", __child);");
    gold.append("\n    suit_in_play.__commit(\"suit_in_play\", __child);");
    gold.append("\n    points_played.__commit(\"points_played\", __child);");
    gold.append("\n    last_winner.__commit(\"last_winner\", __child);");
    gold.append("\n    points_awarded.__commit(\"points_awarded\", __child);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    deck.__revert();");
    gold.append("\n    owner.__revert();");
    gold.append("\n    players.__revert();");
    gold.append("\n    playing.__revert();");
    gold.append("\n    passing_mode.__revert();");
    gold.append("\n    player1.__revert();");
    gold.append("\n    player2.__revert();");
    gold.append("\n    player3.__revert();");
    gold.append("\n    player4.__revert();");
    gold.append("\n    current.__revert();");
    gold.append("\n    played.__revert();");
    gold.append("\n    suit_in_play.__revert();");
    gold.append("\n    points_played.__revert();");
    gold.append("\n    last_winner.__revert();");
    gold.append("\n    points_awarded.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public JsonNode getPrivateViewFor(NtClient __who) {");
    gold.append("\n    if (!(true)) {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    ObjectNode __view = Utility.createObjectNode();");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"hand\", NativeBridge.WRAP_LIST(__BRIDGE_Card).toPrivateJsonNode(__who, hand.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"in_play\", NativeBridge.WRAP_LIST(__BRIDGE_Card).toPrivateJsonNode(__who, in_play.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"last_winner\", NativeBridge.CLIENT_NATIVE_SUPPORT.toPrivateJsonNode(__who, last_winner.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"observers_connected\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, observers_connected.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"passing_mode\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, passing_mode.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"people\", NativeBridge.WRAP_LIST(__BRIDGE_Player).toPrivateJsonNode(__who, people.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"played\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, played.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"players_connected\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, players_connected.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"players_ordered\", NativeBridge.WRAP_LIST(__BRIDGE_Player).toPrivateJsonNode(__who, players_ordered.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"playing\", NativeBridge.BOOLEAN_NATIVE_SUPPORT.toPrivateJsonNode(__who, playing.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"points_awarded\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, points_awarded.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"points_played\", NativeBridge.BOOLEAN_NATIVE_SUPPORT.toPrivateJsonNode(__who, points_played.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"ready\", NativeBridge.BOOLEAN_NATIVE_SUPPORT.toPrivateJsonNode(__who, ready.get()));");
    gold.append("\n    __code_cost++;");
    gold.append("\n    __view.set(\"suit_in_play\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, suit_in_play.get()));");
    gold.append("\n    NtList<RTxCard> __local_my_take = __COMPUTE_my_take(__who);");
    gold.append("\n    if (__local_my_take != null) {");
    gold.append("\n      __view.set(\"my_take\", NativeBridge.WRAP_LIST(__BRIDGE_Card).toPrivateJsonNode(__who, __local_my_take));");
    gold.append("\n    }");
    gold.append("\n    return __view;");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_Suit = new int[] {1, 2, 3, 4};");
    gold.append("\n  private static final int [] __ALL_VALUES_Rank = new int[] {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};");
    gold.append("\n  private static final int [] __ALL_VALUES_Place = new int[] {1, 2, 3, 4};");
    gold.append("\n  private class RTxCard extends RxRecordBase<RTxCard> {");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxInt32 suit;");
    gold.append("\n    private final RxInt32 rank;");
    gold.append("\n    private final RxClient owner;");
    gold.append("\n    private final RxInt32 ordering;");
    gold.append("\n    private final RxInt32 place;");
    gold.append("\n    private final RxLazy<Integer> points;");
    gold.append("\n    private RTxCard(ObjectNode __node, RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      id = RxFactory.makeRxInt32(this, __node, \"id\", 0);");
    gold.append("\n      suit = RxFactory.makeRxInt32(this, __node, \"suit\", 1);");
    gold.append("\n      rank = RxFactory.makeRxInt32(this, __node, \"rank\", 2);");
    gold.append("\n      owner = RxFactory.makeRxClient(this, __node, \"owner\", NtClient.NO_ONE);");
    gold.append("\n      ordering = RxFactory.makeRxInt32(this, __node, \"ordering\", 0);");
    gold.append("\n      place = RxFactory.makeRxInt32(this, __node, \"place\", 1);");
    gold.append("\n      points = new RxLazy<>(this, NativeBridge.INTEGER_NATIVE_SUPPORT, () -> ((suit.get() == 2 ? 1 : (suit.get() == 3 && rank.get() == 12 ? 13 : 0))));");
    gold.append("\n      suit.__subscribe(points);");
    gold.append("\n      rank.__subscribe(points);");
    gold.append("\n      points.__subscribe(this);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public JsonNode getPrivateViewFor(NtClient __who) {");
    gold.append("\n      if (!(true && __POLICY_p(__who))) {");
    gold.append("\n        return null;");
    gold.append("\n      }");
    gold.append("\n      ObjectNode __view = Utility.createObjectNode();");
    gold.append("\n      __code_cost++;");
    gold.append("\n      __view.set(\"id\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, id.get()));");
    gold.append("\n      __code_cost++;");
    gold.append("\n      __view.set(\"rank\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, rank.get()));");
    gold.append("\n      __code_cost++;");
    gold.append("\n      __view.set(\"suit\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, suit.get()));");
    gold.append("\n      return __view;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean __privacyPolicyAllowsCache() {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    public boolean __POLICY_p(NtClient who){");
    gold.append("\n      __track(0);");
    gold.append("\n      if (place.get() == 2 || place.get() == 4) {");
    gold.append("\n        __track(1);");
    gold.append("\n        return (who.equals(owner.get()));");
    gold.append("\n      }");
    gold.append("\n      __track(2);");
    gold.append("\n      if (place.get() == 3) {");
    gold.append("\n        __track(3);");
    gold.append("\n        return true;");
    gold.append("\n      }");
    gold.append("\n      __track(4);");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    String[] __INDEX_COLUMNS = new String[] {\"ordering\", \"owner\", \"place\", \"rank\", \"suit\"};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {ordering.getIndexValue(), owner.getIndexValue(), place.getIndexValue(), rank.getIndexValue(), suit.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, ObjectNode __delta) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        ObjectNode __child = __delta.putObject(__name);");
    gold.append("\n        id.__commit(\"id\", __child);");
    gold.append("\n        suit.__commit(\"suit\", __child);");
    gold.append("\n        rank.__commit(\"rank\", __child);");
    gold.append("\n        owner.__commit(\"owner\", __child);");
    gold.append("\n        ordering.__commit(\"ordering\", __child);");
    gold.append("\n        place.__commit(\"place\", __child);");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        suit.__revert();");
    gold.append("\n        rank.__revert();");
    gold.append("\n        owner.__revert();");
    gold.append("\n        ordering.__revert();");
    gold.append("\n        place.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Card\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final RecordBridge<RTxCard> __BRIDGE_Card = new RecordBridge<>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int  getNumberColumns() {");
    gold.append("\n      return 0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxCard construct(ObjectNode __item, RxParent __parent) {");
    gold.append("\n      return new RTxCard(__item, __parent);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxCard[] makeArray(int __n) {");
    gold.append("\n      return new RTxCard[__n];");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private static class RTxEmpty implements NtMessageBase {");
    gold.append("\n    private RTxEmpty(ObjectNode payload) {}");
    gold.append("\n    @Override");
    gold.append("\n    public ObjectNode convertToObjectNode() {");
    gold.append("\n      ObjectNode __node = Utility.createObjectNode();");
    gold.append("\n      return __node;");
    gold.append("\n    }");
    gold.append("\n    private RTxEmpty() {}");
    gold.append("\n  }");
    gold.append("\n  private static final MessageBridge<RTxEmpty> __BRIDGE_Empty = new MessageBridge<>() {");
    gold.append("\n    @Override");
    gold.append("\n    public RTxEmpty convert(ObjectNode __node) {");
    gold.append("\n      return new RTxEmpty(__node);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxEmpty[] makeArray(int __n) {");
    gold.append("\n      return new RTxEmpty[__n];");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private class RTxPlayer extends RxRecordBase<RTxPlayer> {");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxClient link;");
    gold.append("\n    private final RxBoolean playing;");
    gold.append("\n    private final RxInt32 points;");
    gold.append("\n    private final RxBoolean leader;");
    gold.append("\n    private final RxInt32 play_order;");
    gold.append("\n    private RTxPlayer(ObjectNode __node, RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      id = RxFactory.makeRxInt32(this, __node, \"id\", 0);");
    gold.append("\n      link = RxFactory.makeRxClient(this, __node, \"link\", NtClient.NO_ONE);");
    gold.append("\n      playing = RxFactory.makeRxBoolean(this, __node, \"playing\", false);");
    gold.append("\n      points = RxFactory.makeRxInt32(this, __node, \"points\", 0);");
    gold.append("\n      leader = RxFactory.makeRxBoolean(this, __node, \"leader\", false);");
    gold.append("\n      play_order = RxFactory.makeRxInt32(this, __node, \"play_order\", 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public JsonNode getPrivateViewFor(NtClient __who) {");
    gold.append("\n      if (!(true)) {");
    gold.append("\n        return null;");
    gold.append("\n      }");
    gold.append("\n      ObjectNode __view = Utility.createObjectNode();");
    gold.append("\n      __code_cost++;");
    gold.append("\n      __view.set(\"id\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, id.get()));");
    gold.append("\n      if (__who.equals(link.get())) {");
    gold.append("\n        __code_cost++;");
    gold.append("\n        __view.set(\"leader\", NativeBridge.BOOLEAN_NATIVE_SUPPORT.toPrivateJsonNode(__who, leader.get()));");
    gold.append("\n      }");
    gold.append("\n      __code_cost++;");
    gold.append("\n      __view.set(\"link\", NativeBridge.CLIENT_NATIVE_SUPPORT.toPrivateJsonNode(__who, link.get()));");
    gold.append("\n      if (__who.equals(link.get())) {");
    gold.append("\n        __code_cost++;");
    gold.append("\n        __view.set(\"play_order\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, play_order.get()));");
    gold.append("\n      }");
    gold.append("\n      __code_cost++;");
    gold.append("\n      __view.set(\"points\", NativeBridge.INTEGER_NATIVE_SUPPORT.toPrivateJsonNode(__who, points.get()));");
    gold.append("\n      return __view;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean __privacyPolicyAllowsCache() {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    String[] __INDEX_COLUMNS = new String[] {\"link\", \"play_order\", \"points\"};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {link.getIndexValue(), play_order.getIndexValue(), points.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, ObjectNode __delta) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        ObjectNode __child = __delta.putObject(__name);");
    gold.append("\n        id.__commit(\"id\", __child);");
    gold.append("\n        link.__commit(\"link\", __child);");
    gold.append("\n        playing.__commit(\"playing\", __child);");
    gold.append("\n        points.__commit(\"points\", __child);");
    gold.append("\n        leader.__commit(\"leader\", __child);");
    gold.append("\n        play_order.__commit(\"play_order\", __child);");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        link.__revert();");
    gold.append("\n        playing.__revert();");
    gold.append("\n        points.__revert();");
    gold.append("\n        leader.__revert();");
    gold.append("\n        play_order.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Player\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final RecordBridge<RTxPlayer> __BRIDGE_Player = new RecordBridge<>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int  getNumberColumns() {");
    gold.append("\n      return 0;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxPlayer construct(ObjectNode __item, RxParent __parent) {");
    gold.append("\n      return new RTxPlayer(__item, __parent);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxPlayer[] makeArray(int __n) {");
    gold.append("\n      return new RTxPlayer[__n];");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private static final int [] __ALL_VALUES_LeaderAction = new int[] {1, 2, 3, 10};");
    gold.append("\n  private static class RTxLeaderActionMessage implements NtMessageBase {");
    gold.append("\n    private int action;");
    gold.append("\n    private int id;");
    gold.append("\n    private RTxLeaderActionMessage(ObjectNode payload) {");
    gold.append("\n      this.action = NativeBridge.INTEGER_NATIVE_SUPPORT.readFromMessageObject(payload, \"action\");");
    gold.append("\n      this.id = NativeBridge.INTEGER_NATIVE_SUPPORT.readFromMessageObject(payload, \"id\");");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public ObjectNode convertToObjectNode() {");
    gold.append("\n      ObjectNode __node = Utility.createObjectNode();");
    gold.append("\n      NativeBridge.INTEGER_NATIVE_SUPPORT.writeTo(\"action\", action, __node);");
    gold.append("\n      NativeBridge.INTEGER_NATIVE_SUPPORT.writeTo(\"id\", id, __node);");
    gold.append("\n      return __node;");
    gold.append("\n    }");
    gold.append("\n    private RTxLeaderActionMessage(int action, int id) {");
    gold.append("\n      this.action = action;");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final MessageBridge<RTxLeaderActionMessage> __BRIDGE_LeaderActionMessage = new MessageBridge<>() {");
    gold.append("\n    @Override");
    gold.append("\n    public RTxLeaderActionMessage convert(ObjectNode __node) {");
    gold.append("\n      return new RTxLeaderActionMessage(__node);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxLeaderActionMessage[] makeArray(int __n) {");
    gold.append("\n      return new RTxLeaderActionMessage[__n];");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private static final int [] __ALL_VALUES_PassingMode = new int[] {0, 1, 2, 3};");
    gold.append("\n  private static class RTxCardDecision implements NtMessageBase {");
    gold.append("\n    private int id;");
    gold.append("\n    private RTxCardDecision(ObjectNode payload) {");
    gold.append("\n      this.id = NativeBridge.INTEGER_NATIVE_SUPPORT.readFromMessageObject(payload, \"id\");");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public ObjectNode convertToObjectNode() {");
    gold.append("\n      ObjectNode __node = Utility.createObjectNode();");
    gold.append("\n      NativeBridge.INTEGER_NATIVE_SUPPORT.writeTo(\"id\", id, __node);");
    gold.append("\n      return __node;");
    gold.append("\n    }");
    gold.append("\n    private RTxCardDecision(int id) {");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final MessageBridge<RTxCardDecision> __BRIDGE_CardDecision = new MessageBridge<>() {");
    gold.append("\n    @Override");
    gold.append("\n    public RTxCardDecision convert(ObjectNode __node) {");
    gold.append("\n      return new RTxCardDecision(__node);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTxCardDecision[] makeArray(int __n) {");
    gold.append("\n      return new RTxCardDecision[__n];");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private static class RTx_AnonObjConvert_0 implements NtMessageBase {");
    gold.append("\n    private boolean leader;");
    gold.append("\n    private NtClient link;");
    gold.append("\n    private int play_order;");
    gold.append("\n    private boolean playing;");
    gold.append("\n    private int points;");
    gold.append("\n    private RTx_AnonObjConvert_0(ObjectNode payload) {");
    gold.append("\n      this.leader = NativeBridge.BOOLEAN_NATIVE_SUPPORT.readFromMessageObject(payload, \"leader\");");
    gold.append("\n      this.link = NativeBridge.CLIENT_NATIVE_SUPPORT.readFromMessageObject(payload, \"link\");");
    gold.append("\n      this.play_order = NativeBridge.INTEGER_NATIVE_SUPPORT.readFromMessageObject(payload, \"play_order\");");
    gold.append("\n      this.playing = NativeBridge.BOOLEAN_NATIVE_SUPPORT.readFromMessageObject(payload, \"playing\");");
    gold.append("\n      this.points = NativeBridge.INTEGER_NATIVE_SUPPORT.readFromMessageObject(payload, \"points\");");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public ObjectNode convertToObjectNode() {");
    gold.append("\n      ObjectNode __node = Utility.createObjectNode();");
    gold.append("\n      NativeBridge.BOOLEAN_NATIVE_SUPPORT.writeTo(\"leader\", leader, __node);");
    gold.append("\n      NativeBridge.CLIENT_NATIVE_SUPPORT.writeTo(\"link\", link, __node);");
    gold.append("\n      NativeBridge.INTEGER_NATIVE_SUPPORT.writeTo(\"play_order\", play_order, __node);");
    gold.append("\n      NativeBridge.BOOLEAN_NATIVE_SUPPORT.writeTo(\"playing\", playing, __node);");
    gold.append("\n      NativeBridge.INTEGER_NATIVE_SUPPORT.writeTo(\"points\", points, __node);");
    gold.append("\n      return __node;");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(boolean leader, NtClient link, int play_order, boolean playing, int points) {");
    gold.append("\n      this.leader = leader;");
    gold.append("\n      this.link = link;");
    gold.append("\n      this.play_order = play_order;");
    gold.append("\n      this.playing = playing;");
    gold.append("\n      this.points = points;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final MessageBridge<RTx_AnonObjConvert_0> __BRIDGE__AnonObjConvert_0 = new MessageBridge<>() {");
    gold.append("\n    @Override");
    gold.append("\n    public RTx_AnonObjConvert_0 convert(ObjectNode __node) {");
    gold.append("\n      return new RTx_AnonObjConvert_0(__node);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTx_AnonObjConvert_0[] makeArray(int __n) {");
    gold.append("\n      return new RTx_AnonObjConvert_0[__n];");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private static class RTx_AnonObjConvert_1 implements NtMessageBase {");
    gold.append("\n    private int place;");
    gold.append("\n    private int rank;");
    gold.append("\n    private int suit;");
    gold.append("\n    private RTx_AnonObjConvert_1(ObjectNode payload) {");
    gold.append("\n      this.place = NativeBridge.INTEGER_NATIVE_SUPPORT.readFromMessageObject(payload, \"place\");");
    gold.append("\n      this.rank = NativeBridge.INTEGER_NATIVE_SUPPORT.readFromMessageObject(payload, \"rank\");");
    gold.append("\n      this.suit = NativeBridge.INTEGER_NATIVE_SUPPORT.readFromMessageObject(payload, \"suit\");");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public ObjectNode convertToObjectNode() {");
    gold.append("\n      ObjectNode __node = Utility.createObjectNode();");
    gold.append("\n      NativeBridge.INTEGER_NATIVE_SUPPORT.writeTo(\"place\", place, __node);");
    gold.append("\n      NativeBridge.INTEGER_NATIVE_SUPPORT.writeTo(\"rank\", rank, __node);");
    gold.append("\n      NativeBridge.INTEGER_NATIVE_SUPPORT.writeTo(\"suit\", suit, __node);");
    gold.append("\n      return __node;");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_1(int place, int rank, int suit) {");
    gold.append("\n      this.place = place;");
    gold.append("\n      this.rank = rank;");
    gold.append("\n      this.suit = suit;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final MessageBridge<RTx_AnonObjConvert_1> __BRIDGE__AnonObjConvert_1 = new MessageBridge<>() {");
    gold.append("\n    @Override");
    gold.append("\n    public RTx_AnonObjConvert_1 convert(ObjectNode __node) {");
    gold.append("\n      return new RTx_AnonObjConvert_1(__node);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public RTx_AnonObjConvert_1[] makeArray(int __n) {");
    gold.append("\n      return new RTx_AnonObjConvert_1[__n];");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final Sink<RTxLeaderActionMessage> __queue_leader = new Sink<>(\"leader\");");
    gold.append("\n  private final NtChannel<RTxLeaderActionMessage> leader = new NtChannel<>(__futures, __queue_leader);");
    gold.append("\n  private final Sink<RTxCardDecision[]> __queue_pass_channel = new Sink<>(\"pass_channel\");");
    gold.append("\n  private final NtChannel<RTxCardDecision[]> pass_channel = new NtChannel<>(__futures, __queue_pass_channel);");
    gold.append("\n  private final Sink<RTxCardDecision[]> __queue_single_play = new Sink<>(\"single_play\");");
    gold.append("\n  private final NtChannel<RTxCardDecision[]> single_play = new NtChannel<>(__futures, __queue_single_play);");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    switch (task.channel) {");
    gold.append("\n      case \"leader\":");
    gold.append("\n        __queue_leader.enqueue(task, new RTxLeaderActionMessage(task.message));");
    gold.append("\n        return;");
    gold.append("\n      case \"pass_channel\":");
    gold.append("\n        __queue_pass_channel.enqueue(task, __BRIDGE_CardDecision.convertArrayMessage(task.message));");
    gold.append("\n        return;");
    gold.append("\n      case \"single_play\":");
    gold.append("\n        __queue_single_play.enqueue(task, __BRIDGE_CardDecision.convertArrayMessage(task.message));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n    __queue_leader.clear();");
    gold.append("\n    __queue_pass_channel.clear();");
    gold.append("\n    __queue_single_play.clear();");
    gold.append("\n  }");
    gold.append("\n  private void __step_lobby() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(5);");
    gold.append("\n    RTxLeaderActionMessage decision = leader.fetch(owner.get()).await();");
    gold.append("\n    __track(6);");
    gold.append("\n    if (decision.action == 1 && !ready.get()) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(7);");
    gold.append("\n      NtList<RxBoolean> _auto_2 = (players.iterate(false).where(true, new __CLOSURE_WhereClause7(decision))).transform((item) -> item.playing, null /* no bridge needed */);");
    gold.append("\n      for (RxBoolean _auto_3 : _auto_2) {");
    gold.append("\n        _auto_3.set(true);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (decision.action == 2) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(8);");
    gold.append("\n      NtList<RxBoolean> _auto_4 = (players.iterate(false).where(true, new __CLOSURE_WhereClause8(decision))).transform((item) -> item.playing, null /* no bridge needed */);");
    gold.append("\n      for (RxBoolean _auto_5 : _auto_4) {");
    gold.append("\n        _auto_5.set(false);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (decision.action == 3) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(9);");
    gold.append("\n      NtList<RxInt32> _auto_6 = (players.iterate(false).where(true, new __CLOSURE_WhereClause9())).transform((item) -> item.play_order, null /* no bridge needed */);");
    gold.append("\n      for (RxInt32 _auto_7 : _auto_6) {");
    gold.append("\n        _auto_7.set(__randomInt());");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (decision.action == 10) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(10);");
    gold.append("\n      playing.set(true);");
    gold.append("\n      __track(11);");
    gold.append("\n      if ((players.iterate(false).where(true, new __CLOSURE_WhereClause10())).size() == 4) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(12);");
    gold.append("\n        __transitionStateMachine(\"setup\", 0);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(13);");
    gold.append("\n    __transitionStateMachine(\"lobby\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_setup() {");
    gold.append("\n    __code_cost += 6;");
    gold.append("\n    __track(14);");
    gold.append("\n    for(Integer s : __ALL_VALUES_Suit) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(15);");
    gold.append("\n      for(Integer r : __ALL_VALUES_Rank) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(16);");
    gold.append("\n        {");
    gold.append("\n          RxTable<RTxCard> _AutoRef8 = deck;");
    gold.append("\n          RTx_AnonObjConvert_1 _AutoExpr10 = new RTx_AnonObjConvert_1(1, r, s);");
    gold.append("\n          RTxCard _CreateRef9 = _AutoRef8.make();");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          _CreateRef9.place.set(_AutoExpr10.place);");
    gold.append("\n          _CreateRef9.rank.set(_AutoExpr10.rank);");
    gold.append("\n          _CreateRef9.suit.set(_AutoExpr10.suit);");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(17);");
    gold.append("\n    NtList<RxInt32> _auto_11 = (players.iterate(false).where(true, new __CLOSURE_WhereClause11())).transform((item) -> item.play_order, null /* no bridge needed */);");
    gold.append("\n    for (RxInt32 _auto_12 : _auto_11) {");
    gold.append("\n      _auto_12.set(100);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(18);");
    gold.append("\n    int normativeOrder = 0;");
    gold.append("\n    __track(19);");
    gold.append("\n    NtList<RxInt32> _auto_13 = (players.iterate(false).where(false, new __CLOSURE_WhereClause12()).orderBy(true, __ORDER_Player_play_order_a)).transform((item) -> item.play_order, null /* no bridge needed */);");
    gold.append("\n    for (RxInt32 _auto_14 : _auto_13) {");
    gold.append("\n      _auto_14.set(normativeOrder++);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(20);");
    gold.append("\n    __transitionStateMachine(\"shuffle_and_distribute\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_shuffle_and_distribute() {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(21);");
    gold.append("\n    NtList<RxInt32> _auto_15 = (deck.iterate(true)).transform((item) -> item.ordering, null /* no bridge needed */);");
    gold.append("\n    for (RxInt32 _auto_16 : _auto_15) {");
    gold.append("\n      _auto_16.set(__randomInt());");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(22);");
    gold.append("\n    NtList<RxClient> _auto_17 = (deck.iterate(true)).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n    for (RxClient _auto_18 : _auto_17) {");
    gold.append("\n      _auto_18.set(NtClient.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(23);");
    gold.append("\n    NtList<RxInt32> _auto_19 = (deck.iterate(true)).transform((item) -> item.place, null /* no bridge needed */);");
    gold.append("\n    for (RxInt32 _auto_20 : _auto_19) {");
    gold.append("\n      _auto_20.set(2);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(24);");
    gold.append("\n    RTxPlayer[] op = (players.iterate(false).where(false, new __CLOSURE_WhereClause13()).orderBy(true, __ORDER_Player_play_order_a)).toArray();");
    gold.append("\n    __track(25);");
    gold.append("\n    {");
    gold.append("\n      int k = 0;");
    gold.append("\n      for (;__goodwill(225, 18, 225, 23) && (k < 4);k++) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(26);");
    gold.append("\n        NtMaybe<RTxPlayer> _AutoConditionplayer_21;");
    gold.append("\n        if ((_AutoConditionplayer_21 = Utility.lookup(op, k)).has()) {");
    gold.append("\n          RTxPlayer player = _AutoConditionplayer_21.get();");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          __track(27);");
    gold.append("\n          NtList<RxClient> _auto_22 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause14()).orderBy(false, __ORDER_Card_ordering_a).skipAndLimit(true, 0, 13)).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n          for (RxClient _auto_23 : _auto_22) {");
    gold.append("\n            _auto_23.set(player.link.get());");
    gold.append("\n          }");
    gold.append("\n");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(28);");
    gold.append("\n    __transitionStateMachine(\"pass\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_pass() {");
    gold.append("\n    __code_cost += 13;");
    gold.append("\n    __track(29);");
    gold.append("\n    if (passing_mode.get() == 3) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(30);");
    gold.append("\n      __transitionStateMachine(\"start_play\", 0);");
    gold.append("\n    }");
    gold.append("\n    __track(31);");
    gold.append("\n    RTxPlayer[] op = (players.iterate(false).where(false, new __CLOSURE_WhereClause15()).orderBy(true, __ORDER_Player_play_order_a)).toArray();");
    gold.append("\n    __track(32);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_24;");
    gold.append("\n    if ((_AutoConditionplayer_24 = Utility.lookup(op, 0)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_24.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(33);");
    gold.append("\n      player1.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(34);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_25;");
    gold.append("\n    if ((_AutoConditionplayer_25 = Utility.lookup(op, 1)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_25.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(35);");
    gold.append("\n      player2.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(36);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_26;");
    gold.append("\n    if ((_AutoConditionplayer_26 = Utility.lookup(op, 2)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_26.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(37);");
    gold.append("\n      player3.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(38);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_27;");
    gold.append("\n    if ((_AutoConditionplayer_27 = Utility.lookup(op, 3)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_27.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(39);");
    gold.append("\n      player4.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(40);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass1 = pass_channel.choose(player1.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause16(player1)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(41);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass2 = pass_channel.choose(player2.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause17(player2)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(42);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass3 = pass_channel.choose(player3.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause18(player3)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(43);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass4 = pass_channel.choose(player4.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause19(player4)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(44);");
    gold.append("\n    NtMaybe<RTxCardDecision[]> _AutoConditiondecision1_28;");
    gold.append("\n    if ((_AutoConditiondecision1_28 = pass1.await()).has()) {");
    gold.append("\n      RTxCardDecision[] decision1 = _AutoConditiondecision1_28.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(45);");
    gold.append("\n      NtMaybe<RTxCardDecision[]> _AutoConditiondecision2_29;");
    gold.append("\n      if ((_AutoConditiondecision2_29 = pass2.await()).has()) {");
    gold.append("\n        RTxCardDecision[] decision2 = _AutoConditiondecision2_29.get();");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(46);");
    gold.append("\n        NtMaybe<RTxCardDecision[]> _AutoConditiondecision3_30;");
    gold.append("\n        if ((_AutoConditiondecision3_30 = pass3.await()).has()) {");
    gold.append("\n          RTxCardDecision[] decision3 = _AutoConditiondecision3_30.get();");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          __track(47);");
    gold.append("\n          NtMaybe<RTxCardDecision[]> _AutoConditiondecision4_31;");
    gold.append("\n          if ((_AutoConditiondecision4_31 = pass4.await()).has()) {");
    gold.append("\n            RTxCardDecision[] decision4 = _AutoConditiondecision4_31.get();");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(48);");
    gold.append("\n            if (passing_mode.get() == 2) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(49);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(50);");
    gold.append("\n                NtList<RxClient> _auto_32 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause20(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_33 : _auto_32) {");
    gold.append("\n                  _auto_33.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(51);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(52);");
    gold.append("\n                NtList<RxClient> _auto_34 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause21(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_35 : _auto_34) {");
    gold.append("\n                  _auto_35.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(53);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(54);");
    gold.append("\n                NtList<RxClient> _auto_36 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause22(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_37 : _auto_36) {");
    gold.append("\n                  _auto_37.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(55);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(56);");
    gold.append("\n                NtList<RxClient> _auto_38 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause23(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_39 : _auto_38) {");
    gold.append("\n                  _auto_39.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            } else if (passing_mode.get() == 1) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(57);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(58);");
    gold.append("\n                NtList<RxClient> _auto_40 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause24(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_41 : _auto_40) {");
    gold.append("\n                  _auto_41.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(59);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(60);");
    gold.append("\n                NtList<RxClient> _auto_42 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause25(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_43 : _auto_42) {");
    gold.append("\n                  _auto_43.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(61);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(62);");
    gold.append("\n                NtList<RxClient> _auto_44 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause26(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_45 : _auto_44) {");
    gold.append("\n                  _auto_45.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(63);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(64);");
    gold.append("\n                NtList<RxClient> _auto_46 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause27(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_47 : _auto_46) {");
    gold.append("\n                  _auto_47.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            } else if (passing_mode.get() == 0) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(65);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(66);");
    gold.append("\n                NtList<RxClient> _auto_48 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause28(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_49 : _auto_48) {");
    gold.append("\n                  _auto_49.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(67);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(68);");
    gold.append("\n                NtList<RxClient> _auto_50 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause29(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_51 : _auto_50) {");
    gold.append("\n                  _auto_51.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(69);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(70);");
    gold.append("\n                NtList<RxClient> _auto_52 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause30(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_53 : _auto_52) {");
    gold.append("\n                  _auto_53.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(71);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(72);");
    gold.append("\n                NtList<RxClient> _auto_54 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause31(dec))).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n                for (RxClient _auto_55 : _auto_54) {");
    gold.append("\n                  _auto_55.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(73);");
    gold.append("\n    __transitionStateMachine(\"start_play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_start_play() {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(74);");
    gold.append("\n    played.set(0);");
    gold.append("\n    __track(75);");
    gold.append("\n    current.set(player1.get());");
    gold.append("\n    __track(76);");
    gold.append("\n    NtMaybe<RTxCard> _AutoConditiontwo_clubs_56;");
    gold.append("\n    if ((_AutoConditiontwo_clubs_56 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause32())).lookup(0)).has()) {");
    gold.append("\n      RTxCard two_clubs = _AutoConditiontwo_clubs_56.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(77);");
    gold.append("\n      current.set(two_clubs.owner.get());");
    gold.append("\n    }");
    gold.append("\n    __track(78);");
    gold.append("\n    __transitionStateMachine(\"play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_play() {");
    gold.append("\n    __code_cost += 8;");
    gold.append("\n    __track(79);");
    gold.append("\n    NtList<RTxCard> choices = deck.iterate(false).where(true, new __CLOSURE_WhereClause34(current, played, points_played, suit_in_play));");
    gold.append("\n    __track(80);");
    gold.append("\n    if (choices.get().size() == 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(81);");
    gold.append("\n      choices = deck.iterate(false).where(true, new __CLOSURE_WhereClause35(current));");
    gold.append("\n    }");
    gold.append("\n    __track(82);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> playX = single_play.choose(current.get(), Utility.convertMultiple(choices.get(), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 1);");
    gold.append("\n    __track(83);");
    gold.append("\n    NtMaybe<RTxCardDecision[]> _AutoConditionthePlay_57;");
    gold.append("\n    if ((_AutoConditionthePlay_57 = playX.await()).has()) {");
    gold.append("\n      RTxCardDecision[] thePlay = _AutoConditionthePlay_57.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(84);");
    gold.append("\n      for(RTxCardDecision dec : thePlay) {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(85);");
    gold.append("\n        NtList<RxInt32> _auto_58 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause36(dec))).transform((item) -> item.place, null /* no bridge needed */);");
    gold.append("\n        for (RxInt32 _auto_59 : _auto_58) {");
    gold.append("\n          _auto_59.set(3);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n        __track(86);");
    gold.append("\n        NtMaybe<RTxCard> _AutoConditioncardPlayed_60;");
    gold.append("\n        if ((_AutoConditioncardPlayed_60 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause37(dec))).lookup(0)).has()) {");
    gold.append("\n          RTxCard cardPlayed = _AutoConditioncardPlayed_60.get();");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(87);");
    gold.append("\n          if (cardPlayed.points.get() > 0) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(88);");
    gold.append("\n            points_played.set(true);");
    gold.append("\n          }");
    gold.append("\n          __track(89);");
    gold.append("\n          if (played.get() == 0) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(90);");
    gold.append("\n            suit_in_play.set(cardPlayed.suit.get());");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(91);");
    gold.append("\n    if ((current.get().equals(player1.get()))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(92);");
    gold.append("\n      current.set(player2.get());");
    gold.append("\n    } else if ((current.get().equals(player2.get()))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(93);");
    gold.append("\n      current.set(player3.get());");
    gold.append("\n    } else if ((current.get().equals(player3.get()))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(94);");
    gold.append("\n      current.set(player4.get());");
    gold.append("\n    } else if ((current.get().equals(player4.get()))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(95);");
    gold.append("\n      current.set(player1.get());");
    gold.append("\n    }");
    gold.append("\n    __track(96);");
    gold.append("\n    if (played.get() == 3) {");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n      __track(97);");
    gold.append("\n      NtMaybe<RTxCard> _AutoConditionwinner_61;");
    gold.append("\n      if ((_AutoConditionwinner_61 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause38(suit_in_play)).orderBy(true, __ORDER_Card_rank_d)).lookup(0)).has()) {");
    gold.append("\n        RTxCard winner = _AutoConditionwinner_61.get();");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(98);");
    gold.append("\n        NtList<RxClient> _auto_62 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause39())).transform((item) -> item.owner, null /* no bridge needed */);");
    gold.append("\n        for (RxClient _auto_63 : _auto_62) {");
    gold.append("\n          _auto_63.set(winner.owner.get());");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n        __track(99);");
    gold.append("\n        last_winner.set(winner.owner.get());");
    gold.append("\n      }");
    gold.append("\n      __track(100);");
    gold.append("\n      NtList<RxInt32> _auto_64 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause40())).transform((item) -> item.place, null /* no bridge needed */);");
    gold.append("\n      for (RxInt32 _auto_65 : _auto_64) {");
    gold.append("\n        _auto_65.set(4);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n      __track(101);");
    gold.append("\n      played.set(0);");
    gold.append("\n      __track(102);");
    gold.append("\n      current.set(last_winner.get());");
    gold.append("\n      __track(103);");
    gold.append("\n      if ((deck.iterate(false).where(true, new __CLOSURE_WhereClause41(current))).size() == 0) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(104);");
    gold.append("\n        __transitionStateMachine(\"score\", 0);");
    gold.append("\n      }");
    gold.append("\n    } else {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(105);");
    gold.append("\n      played.bumpUpPost();");
    gold.append("\n    }");
    gold.append("\n    __track(106);");
    gold.append("\n    __transitionStateMachine(\"play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_score() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(107);");
    gold.append("\n    for(RTxPlayer p : players.iterate(false).where(true, new __CLOSURE_WhereClause42())) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(108);");
    gold.append("\n      int local_points = 0;");
    gold.append("\n      __track(109);");
    gold.append("\n      for(RTxCard c : deck.iterate(false).where(true, new __CLOSURE_WhereClause43(p))) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(110);");
    gold.append("\n        local_points += c.points.get();");
    gold.append("\n      }");
    gold.append("\n      __track(111);");
    gold.append("\n      if (local_points == 26) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(112);");
    gold.append("\n        for(RTxPlayer p2 : players.iterate(false).where(true, new __CLOSURE_WhereClause44(p))) {");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(113);");
    gold.append("\n          p2.points.opAddTo(26);");
    gold.append("\n          __track(114);");
    gold.append("\n          points_awarded.opAddTo(26);");
    gold.append("\n        }");
    gold.append("\n      } else {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(115);");
    gold.append("\n        p.points.opAddTo(local_points);");
    gold.append("\n        __track(116);");
    gold.append("\n        points_awarded.opAddTo(local_points);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(117);");
    gold.append("\n    if (passing_mode.get() == 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(118);");
    gold.append("\n      passing_mode.set(2);");
    gold.append("\n    } else if (passing_mode.get() == 2) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(119);");
    gold.append("\n      passing_mode.set(1);");
    gold.append("\n    } else if (passing_mode.get() == 1) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(120);");
    gold.append("\n      passing_mode.set(3);");
    gold.append("\n    } else if (passing_mode.get() == 3) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(121);");
    gold.append("\n      passing_mode.set(0);");
    gold.append("\n    }");
    gold.append("\n    __track(122);");
    gold.append("\n    __transitionStateMachine(\"shuffle_and_distribute\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"lobby\":");
    gold.append("\n        __step_lobby();");
    gold.append("\n        return;");
    gold.append("\n      case \"setup\":");
    gold.append("\n        __step_setup();");
    gold.append("\n        return;");
    gold.append("\n      case \"shuffle_and_distribute\":");
    gold.append("\n        __step_shuffle_and_distribute();");
    gold.append("\n        return;");
    gold.append("\n      case \"pass\":");
    gold.append("\n        __step_pass();");
    gold.append("\n        return;");
    gold.append("\n      case \"start_play\":");
    gold.append("\n        __step_start_play();");
    gold.append("\n        return;");
    gold.append("\n      case \"play\":");
    gold.append("\n        __step_play();");
    gold.append("\n        return;");
    gold.append("\n      case \"score\":");
    gold.append("\n        __step_score();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(NtClient cv){");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(123);");
    gold.append("\n    if ((owner.get().equals(NtClient.NO_ONE))) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(124);");
    gold.append("\n      owner.set(cv);");
    gold.append("\n      __track(125);");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxPlayer> _AutoRef66 = players;");
    gold.append("\n        RTx_AnonObjConvert_0 _AutoExpr68 = new RTx_AnonObjConvert_0(true, cv, 0, true, 0);");
    gold.append("\n        RTxPlayer _CreateRef67 = _AutoRef66.make();");
    gold.append("\n        __code_cost += 5;");
    gold.append("\n        _CreateRef67.leader.set(_AutoExpr68.leader);");
    gold.append("\n        _CreateRef67.link.set(_AutoExpr68.link);");
    gold.append("\n        _CreateRef67.play_order.set(_AutoExpr68.play_order);");
    gold.append("\n        _CreateRef67.playing.set(_AutoExpr68.playing);");
    gold.append("\n        _CreateRef67.points.set(_AutoExpr68.points);");
    gold.append("\n      }");
    gold.append("\n      __track(126);");
    gold.append("\n      __transitionStateMachine(\"lobby\", 0);");
    gold.append("\n    }");
    gold.append("\n    __track(127);");
    gold.append("\n    if ((owner.get().equals(cv))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(128);");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    __track(129);");
    gold.append("\n    if ((players.iterate(false).where(true, new __CLOSURE_WhereClause2(cv))).size() == 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(130);");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxPlayer> _AutoRef69 = players;");
    gold.append("\n        RTx_AnonObjConvert_0 _AutoExpr71 = new RTx_AnonObjConvert_0(false, cv, players.size(), false, 0);");
    gold.append("\n        RTxPlayer _CreateRef70 = _AutoRef69.make();");
    gold.append("\n        __code_cost += 5;");
    gold.append("\n        _CreateRef70.leader.set(_AutoExpr71.leader);");
    gold.append("\n        _CreateRef70.link.set(_AutoExpr71.link);");
    gold.append("\n        _CreateRef70.play_order.set(_AutoExpr71.play_order);");
    gold.append("\n        _CreateRef70.playing.set(_AutoExpr71.playing);");
    gold.append("\n        _CreateRef70.points.set(_AutoExpr71.points);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(131);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public void __onDisconnected__0(NtClient cv) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(132);");
    gold.append("\n    (players.iterate(false).where(true, new __CLOSURE_WhereClause3(cv))).map((__item) -> { __item.__delete(); });");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {");
    gold.append("\n    __onDisconnected__0(__cvalue);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, ObjectNode message) {}");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause1 implements WhereClause<RTxCard> {");
    gold.append("\n    private NtClient who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, who.hashCode(), 2, 4};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause1(NtClient who) {");
    gold.append("\n      this.who = who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 4 && (owner.equals(who));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause2 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private NtClient cv;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, cv.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause2(NtClient cv) {");
    gold.append("\n      this.cv = cv;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      NtClient link = __obj.link.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (link.equals(cv));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause3 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private NtClient cv;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, cv.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause3(NtClient cv) {");
    gold.append("\n      this.cv = cv;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      NtClient link = __obj.link.get();");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (link.equals(cv)) && !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause4 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause5 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause6 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause7 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxLeaderActionMessage decision;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return decision.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause7(RTxLeaderActionMessage decision) {");
    gold.append("\n      this.decision = decision;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == decision.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause8 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxLeaderActionMessage decision;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return decision.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause8(RTxLeaderActionMessage decision) {");
    gold.append("\n      this.decision = decision;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == decision.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause9 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause10 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause11 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause12 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause13 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause14 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, NtClient.NO_ONE.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(NtClient.NO_ONE));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause15 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause16 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient player1;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player1.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause16(RxClient player1) {");
    gold.append("\n      this.player1 = player1;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(player1.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause17 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient player2;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player2.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause17(RxClient player2) {");
    gold.append("\n      this.player2 = player2;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(player2.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause18 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient player3;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player3.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause18(RxClient player3) {");
    gold.append("\n      this.player3 = player3;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(player3.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause19 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient player4;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player4.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause19(RxClient player4) {");
    gold.append("\n      this.player4 = player4;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(player4.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause20 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause20(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause21 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause21(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause22 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause22(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause23 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause23(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause24 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause24(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause25 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause25(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause26 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause26(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause27 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause27(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause28 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause28(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause29 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause29(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause30 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause30(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause31 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause31(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause32 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {3, 2, 4, 1};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int rank = __obj.rank.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return rank == 2 && suit == 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause33 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause34 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient current;");
    gold.append("\n    private RxInt32 played;");
    gold.append("\n    private RxBoolean points_played;");
    gold.append("\n    private RxInt32 suit_in_play;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, current.get().hashCode(), 2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause34(RxClient current, RxInt32 played, RxBoolean points_played, RxInt32 suit_in_play) {");
    gold.append("\n      this.current = current;");
    gold.append("\n      this.played = played;");
    gold.append("\n      this.points_played = points_played;");
    gold.append("\n      this.suit_in_play = suit_in_play;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      int points = __obj.points.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(current.get())) && place == 2 && (played.get() == 0 && (points_played.get() || points == 0) || played.get() > 0 && suit_in_play.get() == suit);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause35 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient current;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, current.get().hashCode(), 2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause35(RxClient current) {");
    gold.append("\n      this.current = current;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(current.get())) && place == 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause36 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause36(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause37 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause37(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause38 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxInt32 suit_in_play;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3, 4, suit_in_play.get()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause38(RxInt32 suit_in_play) {");
    gold.append("\n      this.suit_in_play = suit_in_play;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3 && suit == suit_in_play.get();");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause39 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause40 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause41 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient current;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, current.get().hashCode(), 2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause41(RxClient current) {");
    gold.append("\n      this.current = current;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(current.get())) && place == 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause42 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause43 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxPlayer p;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, p.link.get().hashCode(), 2, 4};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause43(RTxPlayer p) {");
    gold.append("\n      this.p = p;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(p.link.get())) && place == 4;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause44 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxPlayer p;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause44(RTxPlayer p) {");
    gold.append("\n      this.p = p;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      NtClient link = __obj.link.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing && !(link.equals(p.link.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_ordering_a = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return __a.ordering.compareTo(__b.ordering);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_rank_d = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return -__a.rank.compareTo(__b.rank);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxPlayer> __ORDER_Player_play_order_a = new Comparator<RTxPlayer>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxPlayer __a, RTxPlayer __b) {");
    gold.append("\n      return __a.play_order.compareTo(__b.play_order);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{}}-->{\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seedUsed\":\"0\",\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\n{\"command\":\"bill\",\"timestamp\":\"50\"}-->{\"__goodwill_used\":0,\"__cost\":0,\"__billing_seq\":1} need:true in:0");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__seedUsed\":\"0\",\"__seq\":1,\"__time\":\"25\",\"__goodwill_used\":0,\"__cost\":0,\"__billing_seq\":1}");
    gold.append("\n--PRIVACY QUERIES----------------------------------");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"}}-->{\"__state\":\"lobby\",!TimeHiddenForStability!\"75\",\"__seq\":2,\"__connection_id\":1,\"__time\":\"75\",\"players\":{\"auto_key\":1,\"rows\":{\"0\":{\"playing\":true,\"leader\":true}}},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__seedUsed\":\"-4962768465676381896\",\"__blocked_on\":\"leader\",\"__blocked\":true,\"__seq\":3} need:false in:0");
    gold.append("\nAS NO_ONE:{\"data\":{\"hand\":[],\"in_play\":[],\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"observers_connected\":0,\"passing_mode\":0,\"people\":[{\"id\":0,\"leader\":true,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"play_order\":0,\"points\":0}],\"played\":0,\"players_connected\":1,\"players_ordered\":[{\"id\":0,\"leader\":true,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"play_order\":0,\"points\":0}],\"playing\":false,\"points_awarded\":0,\"points_played\":false,\"ready\":false,\"suit_in_play\":1,\"my_take\":[]},\"outstanding\":[{\"id\":1,\"channel\":\"leader\"}],\"blockers\":[{\"agent\":\"?\",\"authority\":\"?\"}]}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}-->{\"__state\":\"lobby\",!TimeHiddenForStability!\"125\",\"__seq\":4,\"__connection_id\":2,\"__time\":\"125\",\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"auto_key\":2,\"rows\":{\"1\":{\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"leader\":true}}},\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__seedUsed\":\"-4962768465676381896\",\"__blocked_on\":\"leader\",\"__seq\":5} need:false in:0");
    gold.append("\nAS RANDO:{\"data\":{\"hand\":[],\"in_play\":[],\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"observers_connected\":0,\"passing_mode\":0,\"people\":[{\"id\":0,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"points\":0},{\"id\":1,\"leader\":true,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"play_order\":0,\"points\":0}],\"played\":0,\"players_connected\":2,\"players_ordered\":[{\"id\":0,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"points\":0},{\"id\":1,\"leader\":true,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"play_order\":0,\"points\":0}],\"playing\":false,\"points_awarded\":0,\"points_played\":false,\"ready\":false,\"suit_in_play\":1,\"my_take\":[]},\"outstanding\":[{\"id\":2,\"channel\":\"leader\"}],\"blockers\":[{\"agent\":\"rando\",\"authority\":\"random-place\"}]}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Spreadsheet_3 = null;
  private String get_Spreadsheet_3() {
    if (cached_Spreadsheet_3 != null) {
      return cached_Spreadsheet_3;
    }
    cached_Spreadsheet_3 = generateTestOutput(true, "Spreadsheet_3", "./test_code/Demo_Spreadsheet_success.a");
    return cached_Spreadsheet_3;
  }

  @Test
  public void testSpreadsheetEmission() {
    assertEmissionGood(get_Spreadsheet_3());
  }

  @Test
  public void testSpreadsheetSuccess() {
    assertLivePass(get_Spreadsheet_3());
  }

  @Test
  public void testSpreadsheetGoodWillHappy() {
    assertGoodWillHappy(get_Spreadsheet_3());
  }

  @Test
  public void testSpreadsheetExceptionFree() {
    assertExceptionFree(get_Spreadsheet_3());
  }

  @Test
  public void testSpreadsheetTODOFree() {
    assertTODOFree(get_Spreadsheet_3());
  }

  @Test
  public void stable_Spreadsheet_3() {
    String live = get_Spreadsheet_3();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:.\\test_code\\Demo_Spreadsheet_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[ ]");
    gold.append("\n--JAVA---------------------------------------------");
    gold.append("\nimport com.fasterxml.jackson.databind.JsonNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ArrayNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ObjectNode;");
    gold.append("\nimport org.adamalang.runtime.*;");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.bridges.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class Spreadsheet_3 extends LivingDocument {");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  private final RxInt32 y;");
    gold.append("\n  private final RxDouble d;");
    gold.append("\n  private final RxBoolean b;");
    gold.append("\n  private final RxString name;");
    gold.append("\n  private final RxLazy<Integer> z;");
    gold.append("\n  private final RxLazy<Double> z2;");
    gold.append("\n  private final RxLazy<String> namex2;");
    gold.append("\n  private final RxLazy<Integer> name_len;");
    gold.append("\n  private final RxLazy<Boolean> bz;");
    gold.append("\n  private final RxLazy<Boolean> baz;");
    gold.append("\n  private final RxLazy<Boolean> baz2;");
    gold.append("\n  private final RxDouble c1;");
    gold.append("\n  private final RxDouble c2;");
    gold.append("\n  private final RxInt32 s;");
    gold.append("\n  public Spreadsheet_3(ObjectNode __root, DocumentMonitor __monitor) {");
    gold.append("\n    super(__root, __monitor);");
    gold.append("\n    x = RxFactory.makeRxInt32(this, __root, \"x\", 0);");
    gold.append("\n    y = RxFactory.makeRxInt32(this, __root, \"y\", 0);");
    gold.append("\n    d = RxFactory.makeRxDouble(this, __root, \"d\", 0.0);");
    gold.append("\n    b = RxFactory.makeRxBoolean(this, __root, \"b\", false);");
    gold.append("\n    name = RxFactory.makeRxString(this, __root, \"name\", \"\");");
    gold.append("\n    z = new RxLazy<>(this, NativeBridge.INTEGER_NATIVE_SUPPORT, () -> (x.get() + y.get()));");
    gold.append("\n    x.__subscribe(z);");
    gold.append("\n    y.__subscribe(z);");
    gold.append("\n    z2 = new RxLazy<>(this, NativeBridge.DOUBLE_NATIVE_SUPPORT, () -> ((b.get() ? x.get() : y.get()) * d.get()));");
    gold.append("\n    b.__subscribe(z2);");
    gold.append("\n    x.__subscribe(z2);");
    gold.append("\n    y.__subscribe(z2);");
    gold.append("\n    d.__subscribe(z2);");
    gold.append("\n    namex2 = new RxLazy<>(this, NativeBridge.STRING_NATIVE_SUPPORT, () -> (name.get() + name.get()));");
    gold.append("\n    name.__subscribe(namex2);");
    gold.append("\n    name_len = new RxLazy<>(this, NativeBridge.INTEGER_NATIVE_SUPPORT, () -> (namex2.get().length()));");
    gold.append("\n    namex2.__subscribe(name_len);");
    gold.append("\n    bz = new RxLazy<>(this, NativeBridge.BOOLEAN_NATIVE_SUPPORT, () -> (name_len.get() > 100));");
    gold.append("\n    name_len.__subscribe(bz);");
    gold.append("\n    baz = new RxLazy<>(this, NativeBridge.BOOLEAN_NATIVE_SUPPORT, () -> (!bz.get()));");
    gold.append("\n    bz.__subscribe(baz);");
    gold.append("\n    baz2 = new RxLazy<>(this, NativeBridge.BOOLEAN_NATIVE_SUPPORT, () -> (!baz.get()));");
    gold.append("\n    baz.__subscribe(baz2);");
    gold.append("\n    c1 = RxFactory.makeRxDouble(this, __root, \"c1\", 0.0);");
    gold.append("\n    c2 = RxFactory.makeRxDouble(this, __root, \"c2\", 0.0);");
    gold.append("\n    s = RxFactory.makeRxInt32(this, __root, \"s\", 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, ObjectNode __delta) {");
    gold.append("\n    ObjectNode __child = __delta;");
    gold.append("\n    __state.__commit(\"__state\", __child);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __child);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __child);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __child);");
    gold.append("\n    __seq.__commit(\"__seq\", __child);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __child);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __child);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __child);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __child);");
    gold.append("\n    __time.__commit(\"__time\", __child);");
    gold.append("\n    x.__commit(\"x\", __child);");
    gold.append("\n    y.__commit(\"y\", __child);");
    gold.append("\n    d.__commit(\"d\", __child);");
    gold.append("\n    b.__commit(\"b\", __child);");
    gold.append("\n    name.__commit(\"name\", __child);");
    gold.append("\n    c1.__commit(\"c1\", __child);");
    gold.append("\n    c2.__commit(\"c2\", __child);");
    gold.append("\n    s.__commit(\"s\", __child);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    y.__revert();");
    gold.append("\n    d.__revert();");
    gold.append("\n    b.__revert();");
    gold.append("\n    name.__revert();");
    gold.append("\n    c1.__revert();");
    gold.append("\n    c2.__revert();");
    gold.append("\n    s.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public JsonNode getPrivateViewFor(NtClient __who) {");
    gold.append("\n    if (!(true)) {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    ObjectNode __view = Utility.createObjectNode();");
    gold.append("\n    return __view;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  private void __step_next() {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(0);");
    gold.append("\n    name.set(\"12345678901234567890123456789012345678901234567890 x \");");
    gold.append("\n    __track(1);");
    gold.append("\n    d.set(3.14);");
    gold.append("\n    __track(2);");
    gold.append("\n    b.set(false);");
    gold.append("\n    __track(3);");
    gold.append("\n    x.set(5);");
    gold.append("\n    __track(4);");
    gold.append("\n    y.set(10);");
    gold.append("\n    __track(5);");
    gold.append("\n    __transitionStateMachine(\"end\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 9;");
    gold.append("\n    __track(6);");
    gold.append("\n    x.set(0);");
    gold.append("\n    __track(7);");
    gold.append("\n    y.set(1);");
    gold.append("\n    __track(8);");
    gold.append("\n    s.set(z.get());");
    gold.append("\n    __track(9);");
    gold.append("\n    d.set(3.14);");
    gold.append("\n    __track(10);");
    gold.append("\n    b.set(true);");
    gold.append("\n    __track(11);");
    gold.append("\n    c1.set(z2.get());");
    gold.append("\n    __track(12);");
    gold.append("\n    b.set(false);");
    gold.append("\n    __track(13);");
    gold.append("\n    c2.set(z2.get());");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"next\":");
    gold.append("\n        __step_next();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(NtClient __who, ObjectNode __message) {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(14);");
    gold.append("\n    x.set(2);");
    gold.append("\n    __track(15);");
    gold.append("\n    y.set(3);");
    gold.append("\n    __track(16);");
    gold.append("\n    d.set(1.5);");
    gold.append("\n    __track(17);");
    gold.append("\n    b.set(true);");
    gold.append("\n    __track(18);");
    gold.append("\n    name.set(\"Jack Jillian\");");
    gold.append("\n    __track(19);");
    gold.append("\n    __transitionStateMachine(\"next\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, ObjectNode message) {");
    gold.append("\n    __construct_0(who, message);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{}}-->{\"__state\":\"next\",\"__constructed\":true,\"x\":2,\"y\":3,\"d\":1.5,\"b\":true,\"name\":\"Jack Jillian\",\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seedUsed\":\"0\",\"__state\":\"end\",!TimeHiddenForStability!\"25\",\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\",\"x\":5,\"y\":10,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seedUsed\":\"-4962768465676381896\",\"__state\":\"\",\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\",\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"c1\":0.0,\"c2\":3.14,\"s\":1} need:false in:-25");
    gold.append("\n{\"command\":\"bill\",\"timestamp\":\"75\"}-->{\"__goodwill_used\":0,\"__cost\":23,\"__billing_seq\":2} need:true in:0");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"__entropy\":\"4804307197456638271\",\"__seedUsed\":\"-4962768465676381896\",!TimeHiddenForStability!\"25\",\"__seq\":2,\"__time\":\"50\",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__goodwill_used\":0,\"__cost\":23,\"__billing_seq\":2}");
    gold.append("\n--PRIVACY QUERIES----------------------------------");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\nRANDO was DENIED");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
}
