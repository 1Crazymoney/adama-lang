/* The Adama Programming Language For Board Games!
 *    See http://www.adama-lang.org/ for more information.
 * (c) copyright 2020 Jeffrey M. Barber (http://jeffrey.io) */
package org.adamalang.translator;

import org.junit.Test;

public class GeneratedDemoTests extends GeneratedBase {
  private String cached_Bomb_1 = null;
  private String get_Bomb_1() {
    if (cached_Bomb_1 != null) {
      return cached_Bomb_1;
    }
    cached_Bomb_1 = generateTestOutput(true, "Bomb_1", "./test_code/Demo_Bomb_success.a");
    return cached_Bomb_1;
  }

  @Test
  public void testBombEmission() {
    assertEmissionGood(get_Bomb_1());
  }

  @Test
  public void testBombSuccess() {
    assertLivePass(get_Bomb_1());
  }

  @Test
  public void testBombGoodWillHappy() {
    assertGoodWillHappy(get_Bomb_1());
  }

  @Test
  public void testBombExceptionFree() {
    assertExceptionFree(get_Bomb_1());
  }

  @Test
  public void testBombTODOFree() {
    assertTODOFree(get_Bomb_1());
  }

  @Test
  public void stable_Bomb_1() {
    String live = get_Bomb_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:./test_code/Demo_Bomb_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[ ]");
    gold.append("\n--JAVA---------------------------------------------");
    gold.append("\nimport com.fasterxml.jackson.databind.JsonNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ArrayNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ObjectNode;");
    gold.append("\nimport org.adamalang.runtime.*;");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class Bomb_1 extends LivingDocument {");
    gold.append("\n  private final RxString x;");
    gold.append("\n  private final RxInt32 k;");
    gold.append("\n  public Bomb_1(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x = new RxString(this, \"\");");
    gold.append("\n    k = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"k\":");
    gold.append("\n            k.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"k\");");
    gold.append("\n    k.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __writer) {");
    gold.append("\n    __state.__commit(\"__state\", __writer);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __writer);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __writer);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __writer);");
    gold.append("\n    __seq.__commit(\"__seq\", __writer);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __writer);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __writer);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __writer);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __writer);");
    gold.append("\n    __time.__commit(\"__time\", __writer);");
    gold.append("\n    x.__commit(\"x\", __writer);");
    gold.append("\n    k.__commit(\"k\", __writer);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    k.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaBomb_1 {");
    gold.append("\n    private DString __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaBomb_1() {");
    gold.append("\n      __dx = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(Bomb_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Consumer<String> __updates) {");
    gold.append("\n    Bomb_1 __self = this;");
    gold.append("\n    DeltaBomb_1 __state = new DeltaBomb_1();");
    gold.append("\n    return new PrivateView(__who, __updates) {");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  private void __step_game_setup() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(0);");
    gold.append("\n    x.set(\"Initializing Device\");");
    gold.append("\n    __track(1);");
    gold.append("\n    k.set(0);");
    gold.append("\n    __track(2);");
    gold.append("\n    __transitionStateMachine(\"tick\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_tick() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(3);");
    gold.append("\n    x.set(\"Tick\");");
    gold.append("\n    __track(4);");
    gold.append("\n    __transitionStateMachine(\"tock\", 0.5);");
    gold.append("\n  }");
    gold.append("\n  private void __step_tock() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(5);");
    gold.append("\n    x.set(\"Tock\");");
    gold.append("\n    __track(6);");
    gold.append("\n    k.bumpUpPost();");
    gold.append("\n    __track(7);");
    gold.append("\n    __transitionStateMachine((k.get() < 10 ? \"tick\" : \"end\"), 0.5);");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(8);");
    gold.append("\n    x.set(\"Boom!!!!\");");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"game_setup\":");
    gold.append("\n        __step_game_setup();");
    gold.append("\n        return;");
    gold.append("\n      case \"tick\":");
    gold.append("\n        __step_tick();");
    gold.append("\n        return;");
    gold.append("\n      case \"tock\":");
    gold.append("\n        __step_tock();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(NtClient who){");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(9);");
    gold.append("\n    return (who.equals(NtClient.NO_ONE));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(10);");
    gold.append("\n    __transitionStateMachine(\"game_setup\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__state\":\"game_setup\",\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"25\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"}}-->{\"__seq\":1,\"__connection_id\":1,\"__time\":\"25\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}} need:true in:0");
    gold.append("\nRANDO was DENIED:5011");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Initializing Device\"},\"outstanding\":[],\"blockers\":[],\"seq\":2}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Initializing Device\"},\"outstanding\":[],\"blockers\":[],\"seq\":2}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seedUsed\":\"0\",\"__state\":\"tick\",\"__next_time\":\"50\",\"__seq\":2,\"__entropy\":\"-4962768465676381896\",\"__time\":\"50\",\"x\":\"Initializing Device\"} need:true in:0");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":3}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seedUsed\":\"-4962768465676381896\",\"__state\":\"tock\",\"__next_time\":\"575\",\"__seq\":3,\"__entropy\":\"4804307197456638271\",\"__time\":\"75\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":4}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"325\"}-->{\"__messages\":null,\"__seedUsed\":\"4804307197456638271\",\"__seq\":4,\"__entropy\":\"-1034601897293430941\",\"__time\":\"325\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"450\"}-->{\"__messages\":null,\"__seedUsed\":\"-1034601897293430941\",\"__seq\":5,\"__entropy\":\"7848011421992302230\",\"__time\":\"450\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":6}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"512\"}-->{\"__messages\":null,\"__seedUsed\":\"7848011421992302230\",\"__seq\":6,\"__entropy\":\"-8929183248358367000\",\"__time\":\"512\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":7}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":7}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"543\"}-->{\"__messages\":null,\"__seedUsed\":\"-8929183248358367000\",\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__time\":\"543\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"568\"}-->{\"__messages\":null,\"__seedUsed\":\"488730542833106255\",\"__seq\":8,\"__entropy\":\"5082315122564986995\",\"__time\":\"568\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":9}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"593\"}-->{\"__messages\":null,\"__seedUsed\":\"5082315122564986995\",\"__state\":\"tick\",\"__next_time\":\"1093\",\"__seq\":9,\"__entropy\":\"-4023469995120514721\",\"__time\":\"593\",\"x\":\"Tock\",\"k\":1} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":10}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":10}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"843\"}-->{\"__messages\":null,\"__seedUsed\":\"-4023469995120514721\",\"__seq\":10,\"__entropy\":\"-652523483647487500\",\"__time\":\"843\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":11}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":11}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"968\"}-->{\"__messages\":null,\"__seedUsed\":\"-652523483647487500\",\"__seq\":11,\"__entropy\":\"733208966369662072\",\"__time\":\"968\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":12}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":12}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1030\"}-->{\"__messages\":null,\"__seedUsed\":\"733208966369662072\",\"__seq\":12,\"__entropy\":\"-2859003968966358305\",\"__time\":\"1030\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":13}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":13}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1061\"}-->{\"__messages\":null,\"__seedUsed\":\"-2859003968966358305\",\"__seq\":13,\"__entropy\":\"2391129358218448901\",\"__time\":\"1061\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":14}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":14}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1086\"}-->{\"__messages\":null,\"__seedUsed\":\"2391129358218448901\",\"__seq\":14,\"__entropy\":\"462804890636782426\",\"__time\":\"1086\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":15}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":15}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1111\"}-->{\"__messages\":null,\"__seedUsed\":\"462804890636782426\",\"__state\":\"tock\",\"__next_time\":\"1611\",\"__seq\":15,\"__entropy\":\"4152650890530247911\",\"__time\":\"1111\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":16}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":16}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1361\"}-->{\"__messages\":null,\"__seedUsed\":\"4152650890530247911\",\"__seq\":16,\"__entropy\":\"-7824937040248809533\",\"__time\":\"1361\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":17}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":17}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1486\"}-->{\"__messages\":null,\"__seedUsed\":\"-7824937040248809533\",\"__seq\":17,\"__entropy\":\"-7423161351415864473\",\"__time\":\"1486\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":18}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":18}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1548\"}-->{\"__messages\":null,\"__seedUsed\":\"-7423161351415864473\",\"__seq\":18,\"__entropy\":\"-1712070416600608528\",\"__time\":\"1548\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":19}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":19}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1579\"}-->{\"__messages\":null,\"__seedUsed\":\"-1712070416600608528\",\"__seq\":19,\"__entropy\":\"-7558503418509576542\",\"__time\":\"1579\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":20}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":20}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1604\"}-->{\"__messages\":null,\"__seedUsed\":\"-7558503418509576542\",\"__seq\":20,\"__entropy\":\"-1602231814014388968\",\"__time\":\"1604\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":21}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":21}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1629\"}-->{\"__messages\":null,\"__seedUsed\":\"-1602231814014388968\",\"__state\":\"tick\",\"__next_time\":\"2129\",\"__seq\":21,\"__entropy\":\"-8398198349610176347\",\"__time\":\"1629\",\"x\":\"Tock\",\"k\":2} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":22}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":22}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"1879\"}-->{\"__messages\":null,\"__seedUsed\":\"-8398198349610176347\",\"__seq\":22,\"__entropy\":\"8543763135442756639\",\"__time\":\"1879\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":23}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":23}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2004\"}-->{\"__messages\":null,\"__seedUsed\":\"8543763135442756639\",\"__seq\":23,\"__entropy\":\"-6771948130860443991\",\"__time\":\"2004\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":24}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":24}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2066\"}-->{\"__messages\":null,\"__seedUsed\":\"-6771948130860443991\",\"__seq\":24,\"__entropy\":\"-6872183637580745469\",\"__time\":\"2066\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":25}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":25}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2097\"}-->{\"__messages\":null,\"__seedUsed\":\"-6872183637580745469\",\"__seq\":25,\"__entropy\":\"-4362937514027401353\",\"__time\":\"2097\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":26}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":26}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2122\"}-->{\"__messages\":null,\"__seedUsed\":\"-4362937514027401353\",\"__seq\":26,\"__entropy\":\"-645818057311197652\",\"__time\":\"2122\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":27}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":27}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2147\"}-->{\"__messages\":null,\"__seedUsed\":\"-645818057311197652\",\"__state\":\"tock\",\"__next_time\":\"2647\",\"__seq\":27,\"__entropy\":\"-2589363629201395742\",\"__time\":\"2147\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":28}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":28}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2397\"}-->{\"__messages\":null,\"__seedUsed\":\"-2589363629201395742\",\"__seq\":28,\"__entropy\":\"-1292473327617944349\",\"__time\":\"2397\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":29}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":29}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2522\"}-->{\"__messages\":null,\"__seedUsed\":\"-1292473327617944349\",\"__seq\":29,\"__entropy\":\"7708962365626450022\",\"__time\":\"2522\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":30}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":30}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2584\"}-->{\"__messages\":null,\"__seedUsed\":\"7708962365626450022\",\"__seq\":30,\"__entropy\":\"-1985167797452687559\",\"__time\":\"2584\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":31}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":31}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2615\"}-->{\"__messages\":null,\"__seedUsed\":\"-1985167797452687559\",\"__seq\":31,\"__entropy\":\"-9181452172432867415\",\"__time\":\"2615\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":32}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":32}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2640\"}-->{\"__messages\":null,\"__seedUsed\":\"-9181452172432867415\",\"__seq\":32,\"__entropy\":\"5136175437742153992\",\"__time\":\"2640\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":33}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":33}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2665\"}-->{\"__messages\":null,\"__seedUsed\":\"5136175437742153992\",\"__state\":\"tick\",\"__next_time\":\"3165\",\"__seq\":33,\"__entropy\":\"2461321076443974826\",\"__time\":\"2665\",\"x\":\"Tock\",\"k\":3} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":34}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":34}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"2915\"}-->{\"__messages\":null,\"__seedUsed\":\"2461321076443974826\",\"__seq\":34,\"__entropy\":\"5393678625457699973\",\"__time\":\"2915\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":35}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":35}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3040\"}-->{\"__messages\":null,\"__seedUsed\":\"5393678625457699973\",\"__seq\":35,\"__entropy\":\"-5223836593555421482\",\"__time\":\"3040\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":36}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":36}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3102\"}-->{\"__messages\":null,\"__seedUsed\":\"-5223836593555421482\",\"__seq\":36,\"__entropy\":\"4231336260356479292\",\"__time\":\"3102\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":37}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":37}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3133\"}-->{\"__messages\":null,\"__seedUsed\":\"4231336260356479292\",\"__seq\":37,\"__entropy\":\"80026624404206994\",\"__time\":\"3133\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":38}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":38}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3158\"}-->{\"__messages\":null,\"__seedUsed\":\"80026624404206994\",\"__seq\":38,\"__entropy\":\"5629798281369249587\",\"__time\":\"3158\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":39}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":39}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3183\"}-->{\"__messages\":null,\"__seedUsed\":\"5629798281369249587\",\"__state\":\"tock\",\"__next_time\":\"3683\",\"__seq\":39,\"__entropy\":\"-7970476187495257102\",\"__time\":\"3183\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":40}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":40}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3433\"}-->{\"__messages\":null,\"__seedUsed\":\"-7970476187495257102\",\"__seq\":40,\"__entropy\":\"8328412070939253235\",\"__time\":\"3433\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":41}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":41}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3558\"}-->{\"__messages\":null,\"__seedUsed\":\"8328412070939253235\",\"__seq\":41,\"__entropy\":\"8613213585075034408\",\"__time\":\"3558\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":42}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":42}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3620\"}-->{\"__messages\":null,\"__seedUsed\":\"8613213585075034408\",\"__seq\":42,\"__entropy\":\"7839281802022211816\",\"__time\":\"3620\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":43}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":43}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3651\"}-->{\"__messages\":null,\"__seedUsed\":\"7839281802022211816\",\"__seq\":43,\"__entropy\":\"605170570079111320\",\"__time\":\"3651\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":44}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":44}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3676\"}-->{\"__messages\":null,\"__seedUsed\":\"605170570079111320\",\"__seq\":44,\"__entropy\":\"-8912674914493871025\",\"__time\":\"3676\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":45}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":45}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3701\"}-->{\"__messages\":null,\"__seedUsed\":\"-8912674914493871025\",\"__state\":\"tick\",\"__next_time\":\"4201\",\"__seq\":45,\"__entropy\":\"-5429469239583332266\",\"__time\":\"3701\",\"x\":\"Tock\",\"k\":4} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":46}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":46}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"3951\"}-->{\"__messages\":null,\"__seedUsed\":\"-5429469239583332266\",\"__seq\":46,\"__entropy\":\"7697740277460248409\",\"__time\":\"3951\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":47}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":47}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4076\"}-->{\"__messages\":null,\"__seedUsed\":\"7697740277460248409\",\"__seq\":47,\"__entropy\":\"6823898353758749145\",\"__time\":\"4076\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":48}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":48}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4138\"}-->{\"__messages\":null,\"__seedUsed\":\"6823898353758749145\",\"__seq\":48,\"__entropy\":\"-765888408110226152\",\"__time\":\"4138\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":49}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":49}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4169\"}-->{\"__messages\":null,\"__seedUsed\":\"-765888408110226152\",\"__seq\":49,\"__entropy\":\"1824341877410284492\",\"__time\":\"4169\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":50}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":50}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4194\"}-->{\"__messages\":null,\"__seedUsed\":\"1824341877410284492\",\"__seq\":50,\"__entropy\":\"-9095715445349070663\",\"__time\":\"4194\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":51}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":51}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4219\"}-->{\"__messages\":null,\"__seedUsed\":\"-9095715445349070663\",\"__state\":\"tock\",\"__next_time\":\"4719\",\"__seq\":51,\"__entropy\":\"-3174726495522908924\",\"__time\":\"4219\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":52}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":52}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4469\"}-->{\"__messages\":null,\"__seedUsed\":\"-3174726495522908924\",\"__seq\":52,\"__entropy\":\"-1842141481138326851\",\"__time\":\"4469\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":53}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":53}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4594\"}-->{\"__messages\":null,\"__seedUsed\":\"-1842141481138326851\",\"__seq\":53,\"__entropy\":\"4802812524751340502\",\"__time\":\"4594\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":54}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":54}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4656\"}-->{\"__messages\":null,\"__seedUsed\":\"4802812524751340502\",\"__seq\":54,\"__entropy\":\"3318693514395478995\",\"__time\":\"4656\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":55}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":55}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4687\"}-->{\"__messages\":null,\"__seedUsed\":\"3318693514395478995\",\"__seq\":55,\"__entropy\":\"7366009943671362924\",\"__time\":\"4687\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":56}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":56}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4712\"}-->{\"__messages\":null,\"__seedUsed\":\"7366009943671362924\",\"__seq\":56,\"__entropy\":\"-5219522476250189798\",\"__time\":\"4712\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":57}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":57}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4737\"}-->{\"__messages\":null,\"__seedUsed\":\"-5219522476250189798\",\"__state\":\"tick\",\"__next_time\":\"5237\",\"__seq\":57,\"__entropy\":\"5613935339826365134\",\"__time\":\"4737\",\"x\":\"Tock\",\"k\":5} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":58}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":58}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"4987\"}-->{\"__messages\":null,\"__seedUsed\":\"5613935339826365134\",\"__seq\":58,\"__entropy\":\"-4047434045954786565\",\"__time\":\"4987\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":59}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":59}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5112\"}-->{\"__messages\":null,\"__seedUsed\":\"-4047434045954786565\",\"__seq\":59,\"__entropy\":\"7623585847884134637\",\"__time\":\"5112\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":60}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":60}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5174\"}-->{\"__messages\":null,\"__seedUsed\":\"7623585847884134637\",\"__seq\":60,\"__entropy\":\"-8847680883679894734\",\"__time\":\"5174\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":61}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":61}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5205\"}-->{\"__messages\":null,\"__seedUsed\":\"-8847680883679894734\",\"__seq\":61,\"__entropy\":\"-929135895385462233\",\"__time\":\"5205\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":62}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":62}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5230\"}-->{\"__messages\":null,\"__seedUsed\":\"-929135895385462233\",\"__seq\":62,\"__entropy\":\"3316956553108501580\",\"__time\":\"5230\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":63}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":63}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5255\"}-->{\"__messages\":null,\"__seedUsed\":\"3316956553108501580\",\"__state\":\"tock\",\"__next_time\":\"5755\",\"__seq\":63,\"__entropy\":\"6881228783152519327\",\"__time\":\"5255\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":64}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":64}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5505\"}-->{\"__messages\":null,\"__seedUsed\":\"6881228783152519327\",\"__seq\":64,\"__entropy\":\"2588941789082157640\",\"__time\":\"5505\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":65}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":65}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5630\"}-->{\"__messages\":null,\"__seedUsed\":\"2588941789082157640\",\"__seq\":65,\"__entropy\":\"-2753861383051875976\",\"__time\":\"5630\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":66}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":66}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5692\"}-->{\"__messages\":null,\"__seedUsed\":\"-2753861383051875976\",\"__seq\":66,\"__entropy\":\"63521059591325732\",\"__time\":\"5692\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":67}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":67}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5723\"}-->{\"__messages\":null,\"__seedUsed\":\"63521059591325732\",\"__seq\":67,\"__entropy\":\"-2508418585031165801\",\"__time\":\"5723\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":68}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":68}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5748\"}-->{\"__messages\":null,\"__seedUsed\":\"-2508418585031165801\",\"__seq\":68,\"__entropy\":\"-1129347891973927280\",\"__time\":\"5748\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":69}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":69}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"5773\"}-->{\"__messages\":null,\"__seedUsed\":\"-1129347891973927280\",\"__state\":\"tick\",\"__next_time\":\"6273\",\"__seq\":69,\"__entropy\":\"9054633673849498218\",\"__time\":\"5773\",\"x\":\"Tock\",\"k\":6} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":70}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":70}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6023\"}-->{\"__messages\":null,\"__seedUsed\":\"9054633673849498218\",\"__seq\":70,\"__entropy\":\"-4718249889278840619\",\"__time\":\"6023\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":71}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":71}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6148\"}-->{\"__messages\":null,\"__seedUsed\":\"-4718249889278840619\",\"__seq\":71,\"__entropy\":\"-441398695570079353\",\"__time\":\"6148\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":72}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":72}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6210\"}-->{\"__messages\":null,\"__seedUsed\":\"-441398695570079353\",\"__seq\":72,\"__entropy\":\"-1590964802480462460\",\"__time\":\"6210\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":73}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":73}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6241\"}-->{\"__messages\":null,\"__seedUsed\":\"-1590964802480462460\",\"__seq\":73,\"__entropy\":\"8358116205139703580\",\"__time\":\"6241\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":74}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":74}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6266\"}-->{\"__messages\":null,\"__seedUsed\":\"8358116205139703580\",\"__seq\":74,\"__entropy\":\"-6363057154176323830\",\"__time\":\"6266\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":75}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":75}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6291\"}-->{\"__messages\":null,\"__seedUsed\":\"-6363057154176323830\",\"__state\":\"tock\",\"__next_time\":\"6791\",\"__seq\":75,\"__entropy\":\"5902287618822687882\",\"__time\":\"6291\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":76}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":76}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6541\"}-->{\"__messages\":null,\"__seedUsed\":\"5902287618822687882\",\"__seq\":76,\"__entropy\":\"774240631672948476\",\"__time\":\"6541\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":77}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":77}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6666\"}-->{\"__messages\":null,\"__seedUsed\":\"774240631672948476\",\"__seq\":77,\"__entropy\":\"-1280523540108581397\",\"__time\":\"6666\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":78}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":78}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6728\"}-->{\"__messages\":null,\"__seedUsed\":\"-1280523540108581397\",\"__seq\":78,\"__entropy\":\"-5403519697878124848\",\"__time\":\"6728\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":79}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":79}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6759\"}-->{\"__messages\":null,\"__seedUsed\":\"-5403519697878124848\",\"__seq\":79,\"__entropy\":\"4290694460975658285\",\"__time\":\"6759\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":80}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":80}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6784\"}-->{\"__messages\":null,\"__seedUsed\":\"4290694460975658285\",\"__seq\":80,\"__entropy\":\"8937230293740383692\",\"__time\":\"6784\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":81}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":81}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"6809\"}-->{\"__messages\":null,\"__seedUsed\":\"8937230293740383692\",\"__state\":\"tick\",\"__next_time\":\"7309\",\"__seq\":81,\"__entropy\":\"637756062700604208\",\"__time\":\"6809\",\"x\":\"Tock\",\"k\":7} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":82}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":82}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7059\"}-->{\"__messages\":null,\"__seedUsed\":\"637756062700604208\",\"__seq\":82,\"__entropy\":\"1158036814397300191\",\"__time\":\"7059\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":83}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":83}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7184\"}-->{\"__messages\":null,\"__seedUsed\":\"1158036814397300191\",\"__seq\":83,\"__entropy\":\"1836765803523210232\",\"__time\":\"7184\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":84}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":84}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7246\"}-->{\"__messages\":null,\"__seedUsed\":\"1836765803523210232\",\"__seq\":84,\"__entropy\":\"-1395491906276510494\",\"__time\":\"7246\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":85}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":85}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7277\"}-->{\"__messages\":null,\"__seedUsed\":\"-1395491906276510494\",\"__seq\":85,\"__entropy\":\"-5543361751294373759\",\"__time\":\"7277\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":86}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":86}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7302\"}-->{\"__messages\":null,\"__seedUsed\":\"-5543361751294373759\",\"__seq\":86,\"__entropy\":\"4175850921494908275\",\"__time\":\"7302\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":87}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":87}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7327\"}-->{\"__messages\":null,\"__seedUsed\":\"4175850921494908275\",\"__state\":\"tock\",\"__next_time\":\"7827\",\"__seq\":87,\"__entropy\":\"1033858561125600546\",\"__time\":\"7327\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":88}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":88}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7577\"}-->{\"__messages\":null,\"__seedUsed\":\"1033858561125600546\",\"__seq\":88,\"__entropy\":\"-3164893194336604692\",\"__time\":\"7577\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":89}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":89}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7702\"}-->{\"__messages\":null,\"__seedUsed\":\"-3164893194336604692\",\"__seq\":89,\"__entropy\":\"-5852320475388809844\",\"__time\":\"7702\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":90}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":90}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7764\"}-->{\"__messages\":null,\"__seedUsed\":\"-5852320475388809844\",\"__seq\":90,\"__entropy\":\"-7272659416417678250\",\"__time\":\"7764\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":91}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":91}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7795\"}-->{\"__messages\":null,\"__seedUsed\":\"-7272659416417678250\",\"__seq\":91,\"__entropy\":\"8175958839185669940\",\"__time\":\"7795\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":92}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":92}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7820\"}-->{\"__messages\":null,\"__seedUsed\":\"8175958839185669940\",\"__seq\":92,\"__entropy\":\"4179054780937916854\",\"__time\":\"7820\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":93}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":93}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"7845\"}-->{\"__messages\":null,\"__seedUsed\":\"4179054780937916854\",\"__state\":\"tick\",\"__next_time\":\"8345\",\"__seq\":93,\"__entropy\":\"2662270167450393994\",\"__time\":\"7845\",\"x\":\"Tock\",\"k\":8} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":94}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":94}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8095\"}-->{\"__messages\":null,\"__seedUsed\":\"2662270167450393994\",\"__seq\":94,\"__entropy\":\"-1317396161158834472\",\"__time\":\"8095\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":95}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":95}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8220\"}-->{\"__messages\":null,\"__seedUsed\":\"-1317396161158834472\",\"__seq\":95,\"__entropy\":\"3084598864010009997\",\"__time\":\"8220\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":96}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":96}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8282\"}-->{\"__messages\":null,\"__seedUsed\":\"3084598864010009997\",\"__seq\":96,\"__entropy\":\"-7771882791412177980\",\"__time\":\"8282\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":97}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":97}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8313\"}-->{\"__messages\":null,\"__seedUsed\":\"-7771882791412177980\",\"__seq\":97,\"__entropy\":\"-8608999492947178165\",\"__time\":\"8313\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":98}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":98}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8338\"}-->{\"__messages\":null,\"__seedUsed\":\"-8608999492947178165\",\"__seq\":98,\"__entropy\":\"-4234437162840137118\",\"__time\":\"8338\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":99}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":99}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8363\"}-->{\"__messages\":null,\"__seedUsed\":\"-4234437162840137118\",\"__state\":\"tock\",\"__next_time\":\"8863\",\"__seq\":99,\"__entropy\":\"-2023745003703699549\",\"__time\":\"8363\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":100}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":100}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8613\"}-->{\"__messages\":null,\"__seedUsed\":\"-2023745003703699549\",\"__seq\":100,\"__entropy\":\"69754625514060559\",\"__time\":\"8613\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":101}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":101}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8738\"}-->{\"__messages\":null,\"__seedUsed\":\"69754625514060559\",\"__seq\":101,\"__entropy\":\"-3473555844301792686\",\"__time\":\"8738\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":102}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":102}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8800\"}-->{\"__messages\":null,\"__seedUsed\":\"-3473555844301792686\",\"__seq\":102,\"__entropy\":\"8768369942756241893\",\"__time\":\"8800\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":103}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":103}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8831\"}-->{\"__messages\":null,\"__seedUsed\":\"8768369942756241893\",\"__seq\":103,\"__entropy\":\"7070763217551653067\",\"__time\":\"8831\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":104}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":104}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8856\"}-->{\"__messages\":null,\"__seedUsed\":\"7070763217551653067\",\"__seq\":104,\"__entropy\":\"-6319753005139232963\",\"__time\":\"8856\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":105}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":105}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"8881\"}-->{\"__messages\":null,\"__seedUsed\":\"-6319753005139232963\",\"__state\":\"tick\",\"__next_time\":\"9381\",\"__seq\":105,\"__entropy\":\"-3700292770926331275\",\"__time\":\"8881\",\"x\":\"Tock\",\"k\":9} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":106}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":106}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9131\"}-->{\"__messages\":null,\"__seedUsed\":\"-3700292770926331275\",\"__seq\":106,\"__entropy\":\"2661324861758524799\",\"__time\":\"9131\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":107}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":107}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9256\"}-->{\"__messages\":null,\"__seedUsed\":\"2661324861758524799\",\"__seq\":107,\"__entropy\":\"-4034329546783367578\",\"__time\":\"9256\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":108}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":108}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9318\"}-->{\"__messages\":null,\"__seedUsed\":\"-4034329546783367578\",\"__seq\":108,\"__entropy\":\"5217474497427191714\",\"__time\":\"9318\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":109}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":109}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9349\"}-->{\"__messages\":null,\"__seedUsed\":\"5217474497427191714\",\"__seq\":109,\"__entropy\":\"4557381070437736467\",\"__time\":\"9349\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":110}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":110}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9374\"}-->{\"__messages\":null,\"__seedUsed\":\"4557381070437736467\",\"__seq\":110,\"__entropy\":\"8298876881210862740\",\"__time\":\"9374\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":111}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"outstanding\":[],\"blockers\":[],\"seq\":111}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9399\"}-->{\"__messages\":null,\"__seedUsed\":\"8298876881210862740\",\"__state\":\"tock\",\"__next_time\":\"9899\",\"__seq\":111,\"__entropy\":\"3142015020570690030\",\"__time\":\"9399\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":112}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":112}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9649\"}-->{\"__messages\":null,\"__seedUsed\":\"3142015020570690030\",\"__seq\":112,\"__entropy\":\"4976671713676084635\",\"__time\":\"9649\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":113}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":113}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9774\"}-->{\"__messages\":null,\"__seedUsed\":\"4976671713676084635\",\"__seq\":113,\"__entropy\":\"1916394321225775893\",\"__time\":\"9774\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":114}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":114}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9836\"}-->{\"__messages\":null,\"__seedUsed\":\"1916394321225775893\",\"__seq\":114,\"__entropy\":\"-1819491950855354448\",\"__time\":\"9836\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":115}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":115}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9867\"}-->{\"__messages\":null,\"__seedUsed\":\"-1819491950855354448\",\"__seq\":115,\"__entropy\":\"-1502392105200697943\",\"__time\":\"9867\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":116}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":116}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9892\"}-->{\"__messages\":null,\"__seedUsed\":\"-1502392105200697943\",\"__seq\":116,\"__entropy\":\"5191188431328708458\",\"__time\":\"9892\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":117}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tock\"},\"outstanding\":[],\"blockers\":[],\"seq\":117}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"9917\"}-->{\"__messages\":null,\"__seedUsed\":\"5191188431328708458\",\"__state\":\"end\",\"__next_time\":\"10417\",\"__seq\":117,\"__entropy\":\"5314181585750775431\",\"__time\":\"9917\",\"x\":\"Tock\",\"k\":10} need:true in:500");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":118}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":118}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10167\"}-->{\"__messages\":null,\"__seedUsed\":\"5314181585750775431\",\"__seq\":118,\"__entropy\":\"-8043414492270390913\",\"__time\":\"10167\"} need:true in:250");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":119}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":119}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10292\"}-->{\"__messages\":null,\"__seedUsed\":\"-8043414492270390913\",\"__seq\":119,\"__entropy\":\"-6045053984042702041\",\"__time\":\"10292\"} need:true in:125");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":120}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":120}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10354\"}-->{\"__messages\":null,\"__seedUsed\":\"-6045053984042702041\",\"__seq\":120,\"__entropy\":\"-7957219997404758563\",\"__time\":\"10354\"} need:true in:63");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":121}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":121}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10385\"}-->{\"__messages\":null,\"__seedUsed\":\"-7957219997404758563\",\"__seq\":121,\"__entropy\":\"8615810463785047703\",\"__time\":\"10385\"} need:true in:32");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":122}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":122}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10410\"}-->{\"__messages\":null,\"__seedUsed\":\"8615810463785047703\",\"__seq\":122,\"__entropy\":\"-2923247105911884308\",\"__time\":\"10410\"} need:true in:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Boom!!!!\"},\"outstanding\":[],\"blockers\":[],\"seq\":123}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Boom!!!!\"},\"outstanding\":[],\"blockers\":[],\"seq\":123}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"10435\"}-->{\"__messages\":null,\"__seedUsed\":\"-2923247105911884308\",\"__state\":\"\",\"__seq\":123,\"__entropy\":\"-9206926828484168278\",\"__time\":\"10435\",\"x\":\"Boom!!!!\"} need:false in:-18");
    gold.append("\n{\"command\":\"bill\",\"timestamp\":\"10460\"}-->{\"__goodwill_used\":0,\"__cost\":326,\"__billing_seq\":123} need:true in:0");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__entropy\":\"-9206926828484168278\",\"__seq\":123,\"__connection_id\":1,\"__time\":\"10435\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__seedUsed\":\"-2923247105911884308\",\"__next_time\":\"10417\",\"x\":\"Boom!!!!\",\"k\":10,\"__goodwill_used\":0,\"__cost\":326,\"__billing_seq\":123}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x\":\"Boom!!!!\",\"k\":10,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"10417\",\"__blocked\":false,\"__seq\":123,\"__entropy\":\"-9206926828484168278\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"10460\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}}");
    gold.append("\n{\"x\":\"Boom!!!!\",\"k\":10,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"10417\",\"__blocked\":false,\"__seq\":123,\"__entropy\":\"-9206926828484168278\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"10460\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_GameHearts_2 = null;
  private String get_GameHearts_2() {
    if (cached_GameHearts_2 != null) {
      return cached_GameHearts_2;
    }
    cached_GameHearts_2 = generateTestOutput(true, "GameHearts_2", "./test_code/Demo_GameHearts_success.a");
    return cached_GameHearts_2;
  }

  @Test
  public void testGameHeartsEmission() {
    assertEmissionGood(get_GameHearts_2());
  }

  @Test
  public void testGameHeartsSuccess() {
    assertLivePass(get_GameHearts_2());
  }

  @Test
  public void testGameHeartsGoodWillHappy() {
    assertGoodWillHappy(get_GameHearts_2());
  }

  @Test
  public void testGameHeartsExceptionFree() {
    assertExceptionFree(get_GameHearts_2());
  }

  @Test
  public void testGameHeartsTODOFree() {
    assertTODOFree(get_GameHearts_2());
  }

  @Test
  public void stable_GameHearts_2() {
    String live = get_GameHearts_2();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:./test_code/Demo_GameHearts_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[ ]");
    gold.append("\n--JAVA---------------------------------------------");
    gold.append("\nimport com.fasterxml.jackson.databind.JsonNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ArrayNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ObjectNode;");
    gold.append("\nimport org.adamalang.runtime.*;");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class GameHearts_2 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxCard> deck;");
    gold.append("\n  private final RxLazy<NtList<RTxCard>> hand;");
    gold.append("\n  private final RxClient owner;");
    gold.append("\n  private final RxTable<RTxPlayer> players;");
    gold.append("\n  private final RxLazy<Integer> players_connected;");
    gold.append("\n  private final RxLazy<Integer> observers_connected;");
    gold.append("\n  private final RxLazy<NtList<RTxPlayer>> people;");
    gold.append("\n  private final RxLazy<NtList<RTxPlayer>> players_ordered;");
    gold.append("\n  private final RxLazy<Boolean> ready;");
    gold.append("\n  private final RxBoolean playing;");
    gold.append("\n  private final RxInt32 passing_mode;");
    gold.append("\n  private final RxClient player1;");
    gold.append("\n  private final RxClient player2;");
    gold.append("\n  private final RxClient player3;");
    gold.append("\n  private final RxClient player4;");
    gold.append("\n  private final RxClient current;");
    gold.append("\n  private final RxInt32 played;");
    gold.append("\n  private final RxInt32 suit_in_play;");
    gold.append("\n  private final RxBoolean points_played;");
    gold.append("\n  private final RxLazy<NtList<RTxCard>> in_play;");
    gold.append("\n  private final RxClient last_winner;");
    gold.append("\n  private final RxInt32 points_awarded;");
    gold.append("\n  private final RxGuard ___my_take;");
    gold.append("\n  public NtList<RTxCard> __COMPUTE_my_take(NtClient who) {");
    gold.append("\n    return deck.iterate(false).where(true, new __CLOSURE_WhereClause1(who));");
    gold.append("\n  }");
    gold.append("\n  public GameHearts_2(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    deck = new RxTable<>(__self, this, \"deck\", (RxParent __parent) -> new RTxCard(__parent), 0);");
    gold.append("\n    hand = new RxLazy<NtList<RTxCard>>(this, () -> (deck.iterate(false).where(true, new __CLOSURE_WhereClause0())));");
    gold.append("\n    deck.__subscribe(hand);");
    gold.append("\n    owner = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n    players = new RxTable<>(__self, this, \"players\", (RxParent __parent) -> new RTxPlayer(__parent), 0);");
    gold.append("\n    players_connected = new RxLazy<Integer>(this, () -> ((players.iterate(false).where(true, new __CLOSURE_WhereClause4())).size()));");
    gold.append("\n    players.__subscribe(players_connected);");
    gold.append("\n    observers_connected = new RxLazy<Integer>(this, () -> ((players.iterate(false).where(true, new __CLOSURE_WhereClause5())).size()));");
    gold.append("\n    players.__subscribe(observers_connected);");
    gold.append("\n    people = new RxLazy<NtList<RTxPlayer>>(this, () -> (players.iterate(false).orderBy(true, __ORDER_Player_play_order_a)));");
    gold.append("\n    players.__subscribe(people);");
    gold.append("\n    players_ordered = new RxLazy<NtList<RTxPlayer>>(this, () -> (players.iterate(false).where(false, new __CLOSURE_WhereClause6()).orderBy(true, __ORDER_Player_play_order_a)));");
    gold.append("\n    players.__subscribe(players_ordered);");
    gold.append("\n    ready = new RxLazy<Boolean>(this, () -> (players_connected.get() == 4));");
    gold.append("\n    players_connected.__subscribe(ready);");
    gold.append("\n    playing = new RxBoolean(this, false);");
    gold.append("\n    passing_mode = new RxInt32(this, 0);");
    gold.append("\n    player1 = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n    player2 = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n    player3 = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n    player4 = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n    current = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n    played = new RxInt32(this, 0);");
    gold.append("\n    suit_in_play = new RxInt32(this, 1);");
    gold.append("\n    points_played = new RxBoolean(this, false);");
    gold.append("\n    in_play = new RxLazy<NtList<RTxCard>>(this, () -> (deck.iterate(false).where(false, new __CLOSURE_WhereClause33()).orderBy(true, __ORDER_Card_rank_d)));");
    gold.append("\n    deck.__subscribe(in_play);");
    gold.append("\n    last_winner = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n    points_awarded = new RxInt32(this, 0);");
    gold.append("\n    ___my_take =  new RxGuard();");
    gold.append("\n    deck.__subscribe(___my_take);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"deck\":");
    gold.append("\n            deck.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"players\":");
    gold.append("\n            players.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"playing\":");
    gold.append("\n            playing.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"passing_mode\":");
    gold.append("\n            passing_mode.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player1\":");
    gold.append("\n            player1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player2\":");
    gold.append("\n            player2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player3\":");
    gold.append("\n            player3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player4\":");
    gold.append("\n            player4.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current\":");
    gold.append("\n            current.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"played\":");
    gold.append("\n            played.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"suit_in_play\":");
    gold.append("\n            suit_in_play.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_played\":");
    gold.append("\n            points_played.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"last_winner\":");
    gold.append("\n            last_winner.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_awarded\":");
    gold.append("\n            points_awarded.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"deck\");");
    gold.append("\n    deck.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n    owner.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"players\");");
    gold.append("\n    players.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"playing\");");
    gold.append("\n    playing.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"passing_mode\");");
    gold.append("\n    passing_mode.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player1\");");
    gold.append("\n    player1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player2\");");
    gold.append("\n    player2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player3\");");
    gold.append("\n    player3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player4\");");
    gold.append("\n    player4.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"current\");");
    gold.append("\n    current.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"played\");");
    gold.append("\n    played.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"suit_in_play\");");
    gold.append("\n    suit_in_play.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"points_played\");");
    gold.append("\n    points_played.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"last_winner\");");
    gold.append("\n    last_winner.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"points_awarded\");");
    gold.append("\n    points_awarded.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __writer) {");
    gold.append("\n    __state.__commit(\"__state\", __writer);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __writer);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __writer);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __writer);");
    gold.append("\n    __seq.__commit(\"__seq\", __writer);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __writer);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __writer);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __writer);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __writer);");
    gold.append("\n    __time.__commit(\"__time\", __writer);");
    gold.append("\n    deck.__commit(\"deck\", __writer);");
    gold.append("\n    owner.__commit(\"owner\", __writer);");
    gold.append("\n    players.__commit(\"players\", __writer);");
    gold.append("\n    playing.__commit(\"playing\", __writer);");
    gold.append("\n    passing_mode.__commit(\"passing_mode\", __writer);");
    gold.append("\n    player1.__commit(\"player1\", __writer);");
    gold.append("\n    player2.__commit(\"player2\", __writer);");
    gold.append("\n    player3.__commit(\"player3\", __writer);");
    gold.append("\n    player4.__commit(\"player4\", __writer);");
    gold.append("\n    current.__commit(\"current\", __writer);");
    gold.append("\n    played.__commit(\"played\", __writer);");
    gold.append("\n    suit_in_play.__commit(\"suit_in_play\", __writer);");
    gold.append("\n    points_played.__commit(\"points_played\", __writer);");
    gold.append("\n    last_winner.__commit(\"last_winner\", __writer);");
    gold.append("\n    points_awarded.__commit(\"points_awarded\", __writer);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    deck.__revert();");
    gold.append("\n    owner.__revert();");
    gold.append("\n    players.__revert();");
    gold.append("\n    playing.__revert();");
    gold.append("\n    passing_mode.__revert();");
    gold.append("\n    player1.__revert();");
    gold.append("\n    player2.__revert();");
    gold.append("\n    player3.__revert();");
    gold.append("\n    player4.__revert();");
    gold.append("\n    current.__revert();");
    gold.append("\n    played.__revert();");
    gold.append("\n    suit_in_play.__revert();");
    gold.append("\n    points_played.__revert();");
    gold.append("\n    last_winner.__revert();");
    gold.append("\n    points_awarded.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaGameHearts_2 {");
    gold.append("\n    private int __ghand;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __dhand;");
    gold.append("\n    private int __gplayers_connected;");
    gold.append("\n    private DInt32 __dplayers_connected;");
    gold.append("\n    private int __gobservers_connected;");
    gold.append("\n    private DInt32 __dobservers_connected;");
    gold.append("\n    private int __gpeople;");
    gold.append("\n    private DRecordList<DeltaRTxPlayer> __dpeople;");
    gold.append("\n    private int __gplayers_ordered;");
    gold.append("\n    private DRecordList<DeltaRTxPlayer> __dplayers_ordered;");
    gold.append("\n    private int __gready;");
    gold.append("\n    private DBoolean __dready;");
    gold.append("\n    private DBoolean __dplaying;");
    gold.append("\n    private DInt32 __dpassing_mode;");
    gold.append("\n    private DInt32 __dplayed;");
    gold.append("\n    private DInt32 __dsuit_in_play;");
    gold.append("\n    private DBoolean __dpoints_played;");
    gold.append("\n    private int __gin_play;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __din_play;");
    gold.append("\n    private DClient __dlast_winner;");
    gold.append("\n    private DInt32 __dpoints_awarded;");
    gold.append("\n    private int __gmy_take;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __dmy_take;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaGameHearts_2() {");
    gold.append("\n      __ghand = -1;");
    gold.append("\n      __dhand = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __gplayers_connected = -1;");
    gold.append("\n      __dplayers_connected = new DInt32();");
    gold.append("\n      __gobservers_connected = -1;");
    gold.append("\n      __dobservers_connected = new DInt32();");
    gold.append("\n      __gpeople = -1;");
    gold.append("\n      __dpeople = new DRecordList<DeltaRTxPlayer>();");
    gold.append("\n      __gplayers_ordered = -1;");
    gold.append("\n      __dplayers_ordered = new DRecordList<DeltaRTxPlayer>();");
    gold.append("\n      __gready = -1;");
    gold.append("\n      __dready = new DBoolean();");
    gold.append("\n      __dplaying = new DBoolean();");
    gold.append("\n      __dpassing_mode = new DInt32();");
    gold.append("\n      __dplayed = new DInt32();");
    gold.append("\n      __dsuit_in_play = new DInt32();");
    gold.append("\n      __dpoints_played = new DBoolean();");
    gold.append("\n      __gin_play = -1;");
    gold.append("\n      __din_play = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __dlast_winner = new DClient();");
    gold.append("\n      __dpoints_awarded = new DInt32();");
    gold.append("\n      __gmy_take = -1;");
    gold.append("\n      __dmy_take = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(GameHearts_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 15;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__ghand != __item.hand.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list3 = __obj.planField(\"hand\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList4 = __dhand;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker5 = __deltaList4.begin();");
    gold.append("\n          for (RTxCard __listElement6 : __item.hand.get()) {");
    gold.append("\n            DeltaRTxCard __deltaElement7 = __deltaList4.getPrior(__listElement6.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement7.show(__listElement6, __list3.planField(__listElement6.__id()));");
    gold.append("\n            __deltaListWalker5.next(__listElement6.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker5.end(__list3);");
    gold.append("\n          __list3.end();");
    gold.append("\n        }");
    gold.append("\n        __ghand = __item.hand.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gplayers_connected != __item.players_connected.getGeneration()) {");
    gold.append("\n        __dplayers_connected.show(__item.players_connected.get(), __obj.planField(\"players_connected\"));");
    gold.append("\n        __gplayers_connected = __item.players_connected.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gobservers_connected != __item.observers_connected.getGeneration()) {");
    gold.append("\n        __dobservers_connected.show(__item.observers_connected.get(), __obj.planField(\"observers_connected\"));");
    gold.append("\n        __gobservers_connected = __item.observers_connected.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gpeople != __item.people.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list8 = __obj.planField(\"people\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxPlayer> __deltaList9 = __dpeople;");
    gold.append("\n          DRecordList<DeltaRTxPlayer>.Walk __deltaListWalker10 = __deltaList9.begin();");
    gold.append("\n          for (RTxPlayer __listElement11 : __item.people.get()) {");
    gold.append("\n            DeltaRTxPlayer __deltaElement12 = __deltaList9.getPrior(__listElement11.__id(), () -> new DeltaRTxPlayer());");
    gold.append("\n            __deltaElement12.show(__listElement11, __list8.planField(__listElement11.__id()));");
    gold.append("\n            __deltaListWalker10.next(__listElement11.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker10.end(__list8);");
    gold.append("\n          __list8.end();");
    gold.append("\n        }");
    gold.append("\n        __gpeople = __item.people.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gplayers_ordered != __item.players_ordered.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list13 = __obj.planField(\"players_ordered\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxPlayer> __deltaList14 = __dplayers_ordered;");
    gold.append("\n          DRecordList<DeltaRTxPlayer>.Walk __deltaListWalker15 = __deltaList14.begin();");
    gold.append("\n          for (RTxPlayer __listElement16 : __item.players_ordered.get()) {");
    gold.append("\n            DeltaRTxPlayer __deltaElement17 = __deltaList14.getPrior(__listElement16.__id(), () -> new DeltaRTxPlayer());");
    gold.append("\n            __deltaElement17.show(__listElement16, __list13.planField(__listElement16.__id()));");
    gold.append("\n            __deltaListWalker15.next(__listElement16.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker15.end(__list13);");
    gold.append("\n          __list13.end();");
    gold.append("\n        }");
    gold.append("\n        __gplayers_ordered = __item.players_ordered.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gready != __item.ready.getGeneration()) {");
    gold.append("\n        __dready.show(__item.ready.get(), __obj.planField(\"ready\"));");
    gold.append("\n        __gready = __item.ready.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      __dplaying.show(__item.playing.get(), __obj.planField(\"playing\"));");
    gold.append("\n      __dpassing_mode.show(__item.passing_mode.get(), __obj.planField(\"passing_mode\"));");
    gold.append("\n      __dplayed.show(__item.played.get(), __obj.planField(\"played\"));");
    gold.append("\n      __dsuit_in_play.show(__item.suit_in_play.get(), __obj.planField(\"suit_in_play\"));");
    gold.append("\n      __dpoints_played.show(__item.points_played.get(), __obj.planField(\"points_played\"));");
    gold.append("\n      if (__gin_play != __item.in_play.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list18 = __obj.planField(\"in_play\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList19 = __din_play;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker20 = __deltaList19.begin();");
    gold.append("\n          for (RTxCard __listElement21 : __item.in_play.get()) {");
    gold.append("\n            DeltaRTxCard __deltaElement22 = __deltaList19.getPrior(__listElement21.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement22.show(__listElement21, __list18.planField(__listElement21.__id()));");
    gold.append("\n            __deltaListWalker20.next(__listElement21.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker20.end(__list18);");
    gold.append("\n          __list18.end();");
    gold.append("\n        }");
    gold.append("\n        __gin_play = __item.in_play.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      __dlast_winner.show(__item.last_winner.get(), __obj.planField(\"last_winner\"));");
    gold.append("\n      __dpoints_awarded.show(__item.points_awarded.get(), __obj.planField(\"points_awarded\"));");
    gold.append("\n      if (__gmy_take != __item.___my_take.getGeneration()) {");
    gold.append("\n        NtList<RTxCard> __local_my_take = __item.__COMPUTE_my_take(__writer.who);");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list23 = __obj.planField(\"my_take\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList24 = __dmy_take;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker25 = __deltaList24.begin();");
    gold.append("\n          for (RTxCard __listElement26 : __local_my_take) {");
    gold.append("\n            DeltaRTxCard __deltaElement27 = __deltaList24.getPrior(__listElement26.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement27.show(__listElement26, __list23.planField(__listElement26.__id()));");
    gold.append("\n            __deltaListWalker25.next(__listElement26.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker25.end(__list23);");
    gold.append("\n          __list23.end();");
    gold.append("\n        }");
    gold.append("\n        __gmy_take = __item.___my_take.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Consumer<String> __updates) {");
    gold.append("\n    GameHearts_2 __self = this;");
    gold.append("\n    DeltaGameHearts_2 __state = new DeltaGameHearts_2();");
    gold.append("\n    return new PrivateView(__who, __updates) {");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_Suit = new int[] {1, 2, 3, 4};");
    gold.append("\n  private static final int [] __ALL_VALUES_Rank = new int[] {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};");
    gold.append("\n  private static final int [] __ALL_VALUES_Place = new int[] {1, 2, 3, 4};");
    gold.append("\n  private class RTxCard extends RxRecordBase<RTxCard> {");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxInt32 suit;");
    gold.append("\n    private final RxInt32 rank;");
    gold.append("\n    private final RxClient owner;");
    gold.append("\n    private final RxInt32 ordering;");
    gold.append("\n    private final RxInt32 place;");
    gold.append("\n    private final RxLazy<Integer> points;");
    gold.append("\n    private RTxCard(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      suit = new RxInt32(this, 1);");
    gold.append("\n      rank = new RxInt32(this, 2);");
    gold.append("\n      owner = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n      ordering = new RxInt32(this, 0);");
    gold.append("\n      place = new RxInt32(this, 1);");
    gold.append("\n      points = new RxLazy<Integer>(this, () -> ((suit.get() == 2 ? 1 : (suit.get() == 3 && rank.get() == 12 ? 13 : 0))));");
    gold.append("\n      suit.__subscribe(points);");
    gold.append("\n      rank.__subscribe(points);");
    gold.append("\n      points.__subscribe(this);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public boolean __POLICY_p(NtClient who){");
    gold.append("\n      __track(0);");
    gold.append("\n      if (place.get() == 2 || place.get() == 4) {");
    gold.append("\n        __track(1);");
    gold.append("\n        return (who.equals(owner.get()));");
    gold.append("\n      }");
    gold.append("\n      __track(2);");
    gold.append("\n      if (place.get() == 3) {");
    gold.append("\n        __track(3);");
    gold.append("\n        return true;");
    gold.append("\n      }");
    gold.append("\n      __track(4);");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    String[] __INDEX_COLUMNS = new String[] {\"ordering\", \"owner\", \"place\", \"rank\", \"suit\"};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {ordering.getIndexValue(), owner.getIndexValue(), place.getIndexValue(), rank.getIndexValue(), suit.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"suit\":");
    gold.append("\n              suit.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"rank\":");
    gold.append("\n              rank.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              ordering.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"place\":");
    gold.append("\n              place.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"suit\");");
    gold.append("\n      suit.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"rank\");");
    gold.append("\n      rank.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n      owner.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"ordering\");");
    gold.append("\n      ordering.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"place\");");
    gold.append("\n      place.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __writer) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __writer.writeObjectFieldIntro(__name);");
    gold.append("\n        __writer.beginObject();");
    gold.append("\n        id.__commit(\"id\", __writer);");
    gold.append("\n        suit.__commit(\"suit\", __writer);");
    gold.append("\n        rank.__commit(\"rank\", __writer);");
    gold.append("\n        owner.__commit(\"owner\", __writer);");
    gold.append("\n        ordering.__commit(\"ordering\", __writer);");
    gold.append("\n        place.__commit(\"place\", __writer);");
    gold.append("\n        __writer.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        suit.__revert();");
    gold.append("\n        rank.__revert();");
    gold.append("\n        owner.__revert();");
    gold.append("\n        ordering.__revert();");
    gold.append("\n        place.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Card\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxCard {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DInt32 __dsuit;");
    gold.append("\n    private DInt32 __drank;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxCard() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dsuit = new DInt32();");
    gold.append("\n      __drank = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxCard __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dsuit.show(__item.suit.get(), __obj.planField(\"suit\"));");
    gold.append("\n      __drank.show(__item.rank.get(), __obj.planField(\"rank\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxEmpty implements NtMessageBase {");
    gold.append("\n    private RTxEmpty(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxEmpty() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxEmpty {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxEmpty() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxEmpty __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class RTxPlayer extends RxRecordBase<RTxPlayer> {");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxClient link;");
    gold.append("\n    private final RxBoolean playing;");
    gold.append("\n    private final RxInt32 points;");
    gold.append("\n    private final RxBoolean leader;");
    gold.append("\n    private final RxInt32 play_order;");
    gold.append("\n    private RTxPlayer(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      link = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n      playing = new RxBoolean(this, false);");
    gold.append("\n      points = new RxInt32(this, 0);");
    gold.append("\n      leader = new RxBoolean(this, false);");
    gold.append("\n      play_order = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    String[] __INDEX_COLUMNS = new String[] {\"link\", \"play_order\", \"points\"};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {link.getIndexValue(), play_order.getIndexValue(), points.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"link\":");
    gold.append("\n              link.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"playing\":");
    gold.append("\n              playing.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"points\":");
    gold.append("\n              points.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"leader\":");
    gold.append("\n              leader.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"play_order\":");
    gold.append("\n              play_order.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"link\");");
    gold.append("\n      link.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"playing\");");
    gold.append("\n      playing.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"points\");");
    gold.append("\n      points.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"leader\");");
    gold.append("\n      leader.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"play_order\");");
    gold.append("\n      play_order.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __writer) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __writer.writeObjectFieldIntro(__name);");
    gold.append("\n        __writer.beginObject();");
    gold.append("\n        id.__commit(\"id\", __writer);");
    gold.append("\n        link.__commit(\"link\", __writer);");
    gold.append("\n        playing.__commit(\"playing\", __writer);");
    gold.append("\n        points.__commit(\"points\", __writer);");
    gold.append("\n        leader.__commit(\"leader\", __writer);");
    gold.append("\n        play_order.__commit(\"play_order\", __writer);");
    gold.append("\n        __writer.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        link.__revert();");
    gold.append("\n        playing.__revert();");
    gold.append("\n        points.__revert();");
    gold.append("\n        leader.__revert();");
    gold.append("\n        play_order.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Player\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPlayer {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DClient __dlink;");
    gold.append("\n    private DInt32 __dpoints;");
    gold.append("\n    private DBoolean __dleader;");
    gold.append("\n    private DInt32 __dplay_order;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPlayer() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dlink = new DClient();");
    gold.append("\n      __dpoints = new DInt32();");
    gold.append("\n      __dleader = new DBoolean();");
    gold.append("\n      __dplay_order = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPlayer __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dlink.show(__item.link.get(), __obj.planField(\"link\"));");
    gold.append("\n      __dpoints.show(__item.points.get(), __obj.planField(\"points\"));");
    gold.append("\n      if (__writer.who.equals(__item.link.get())) {");
    gold.append("\n        __dleader.show(__item.leader.get(), __obj.planField(\"leader\"));");
    gold.append("\n        /* privacy check close up */");
    gold.append("\n      } else {");
    gold.append("\n        __dleader.hide(__obj.planField(\"leader\"));");
    gold.append("\n      }");
    gold.append("\n      if (__writer.who.equals(__item.link.get())) {");
    gold.append("\n        __dplay_order.show(__item.play_order.get(), __obj.planField(\"play_order\"));");
    gold.append("\n        /* privacy check close up */");
    gold.append("\n      } else {");
    gold.append("\n        __dplay_order.hide(__obj.planField(\"play_order\"));");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_LeaderAction = new int[] {1, 2, 3, 10};");
    gold.append("\n  private static class RTxLeaderActionMessage implements NtMessageBase {");
    gold.append("\n    private int action = 0;");
    gold.append("\n    private int id = 0;");
    gold.append("\n    private RTxLeaderActionMessage(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"action\":");
    gold.append("\n              this.action = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              this.id = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"action\");");
    gold.append("\n      __writer.writeInteger(action);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      __writer.writeInteger(id);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxLeaderActionMessage() {}");
    gold.append("\n    private RTxLeaderActionMessage(int action, int id) {");
    gold.append("\n      this.action = action;");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxLeaderActionMessage {");
    gold.append("\n    private DInt32 __daction;");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxLeaderActionMessage() {");
    gold.append("\n      __daction = new DInt32();");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxLeaderActionMessage __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __daction.show(__item.action, __obj.planField(\"action\"));");
    gold.append("\n      __did.show(__item.id, __obj.planField(\"id\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_PassingMode = new int[] {0, 1, 2, 3};");
    gold.append("\n  private static class RTxCardDecision implements NtMessageBase {");
    gold.append("\n    private int id = 0;");
    gold.append("\n    private RTxCardDecision(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              this.id = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      __writer.writeInteger(id);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxCardDecision() {}");
    gold.append("\n    private RTxCardDecision(int id) {");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxCardDecision {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxCardDecision() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxCardDecision __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id, __obj.planField(\"id\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 implements NtMessageBase {");
    gold.append("\n    private boolean leader = false;");
    gold.append("\n    private NtClient link = NtClient.NO_ONE;");
    gold.append("\n    private int play_order = 0;");
    gold.append("\n    private boolean playing = false;");
    gold.append("\n    private int points = 0;");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"leader\":");
    gold.append("\n              this.leader = __reader.readBoolean();");
    gold.append("\n              break;");
    gold.append("\n            case \"link\":");
    gold.append("\n              this.link = __reader.readNtClient();");
    gold.append("\n              break;");
    gold.append("\n            case \"play_order\":");
    gold.append("\n              this.play_order = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            case \"playing\":");
    gold.append("\n              this.playing = __reader.readBoolean();");
    gold.append("\n              break;");
    gold.append("\n            case \"points\":");
    gold.append("\n              this.points = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"leader\");");
    gold.append("\n      __writer.writeBoolean(leader);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"link\");");
    gold.append("\n      __writer.writeNtClient(link);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"play_order\");");
    gold.append("\n      __writer.writeInteger(play_order);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"playing\");");
    gold.append("\n      __writer.writeBoolean(playing);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"points\");");
    gold.append("\n      __writer.writeInteger(points);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() {}");
    gold.append("\n    private RTx_AnonObjConvert_0(boolean leader, NtClient link, int play_order, boolean playing, int points) {");
    gold.append("\n      this.leader = leader;");
    gold.append("\n      this.link = link;");
    gold.append("\n      this.play_order = play_order;");
    gold.append("\n      this.playing = playing;");
    gold.append("\n      this.points = points;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 {");
    gold.append("\n    private DBoolean __dleader;");
    gold.append("\n    private DClient __dlink;");
    gold.append("\n    private DInt32 __dplay_order;");
    gold.append("\n    private DBoolean __dplaying;");
    gold.append("\n    private DInt32 __dpoints;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dleader = new DBoolean();");
    gold.append("\n      __dlink = new DClient();");
    gold.append("\n      __dplay_order = new DInt32();");
    gold.append("\n      __dplaying = new DBoolean();");
    gold.append("\n      __dpoints = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dleader.show(__item.leader, __obj.planField(\"leader\"));");
    gold.append("\n      __dlink.show(__item.link, __obj.planField(\"link\"));");
    gold.append("\n      __dplay_order.show(__item.play_order, __obj.planField(\"play_order\"));");
    gold.append("\n      __dplaying.show(__item.playing, __obj.planField(\"playing\"));");
    gold.append("\n      __dpoints.show(__item.points, __obj.planField(\"points\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_2 implements NtMessageBase {");
    gold.append("\n    private int place = 0;");
    gold.append("\n    private int rank = 0;");
    gold.append("\n    private int suit = 0;");
    gold.append("\n    private RTx_AnonObjConvert_2(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"place\":");
    gold.append("\n              this.place = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            case \"rank\":");
    gold.append("\n              this.rank = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            case \"suit\":");
    gold.append("\n              this.suit = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"place\");");
    gold.append("\n      __writer.writeInteger(place);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"rank\");");
    gold.append("\n      __writer.writeInteger(rank);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"suit\");");
    gold.append("\n      __writer.writeInteger(suit);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_2() {}");
    gold.append("\n    private RTx_AnonObjConvert_2(int place, int rank, int suit) {");
    gold.append("\n      this.place = place;");
    gold.append("\n      this.rank = rank;");
    gold.append("\n      this.suit = suit;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_2 {");
    gold.append("\n    private DInt32 __dplace;");
    gold.append("\n    private DInt32 __drank;");
    gold.append("\n    private DInt32 __dsuit;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_2() {");
    gold.append("\n      __dplace = new DInt32();");
    gold.append("\n      __drank = new DInt32();");
    gold.append("\n      __dsuit = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dplace.show(__item.place, __obj.planField(\"place\"));");
    gold.append("\n      __drank.show(__item.rank, __obj.planField(\"rank\"));");
    gold.append("\n      __dsuit.show(__item.suit, __obj.planField(\"suit\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final Sink<RTxLeaderActionMessage> __queue_leader = new Sink<>(\"leader\");");
    gold.append("\n  private final NtChannel<RTxLeaderActionMessage> leader = new NtChannel<>(__futures, __queue_leader);");
    gold.append("\n  private final Sink<RTxCardDecision[]> __queue_pass_channel = new Sink<>(\"pass_channel\");");
    gold.append("\n  private final NtChannel<RTxCardDecision[]> pass_channel = new NtChannel<>(__futures, __queue_pass_channel);");
    gold.append("\n  private final Sink<RTxCardDecision[]> __queue_single_play = new Sink<>(\"single_play\");");
    gold.append("\n  private final NtChannel<RTxCardDecision[]> single_play = new NtChannel<>(__futures, __queue_single_play);");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"leader\":");
    gold.append("\n        __queue_leader.enqueue(__task, (RTxLeaderActionMessage) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      case \"pass_channel\":");
    gold.append("\n        __queue_pass_channel.enqueue(__task, (RTxCardDecision[]) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      case \"single_play\":");
    gold.append("\n        __queue_single_play.enqueue(__task, (RTxCardDecision[]) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"leader\":");
    gold.append("\n        return new RTxLeaderActionMessage(__reader);");
    gold.append("\n      case \"pass_channel\":");
    gold.append("\n        {");
    gold.append("\n          ArrayList<RTxCardDecision> __array_pass_channel = new ArrayList<>();");
    gold.append("\n          if (__reader.startArray()) {");
    gold.append("\n            while (__reader.notEndOfArray()) {");
    gold.append("\n              __array_pass_channel.add(new RTxCardDecision(__reader));");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n          return __array_pass_channel.toArray(new RTxCardDecision[__array_pass_channel.size()]);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n      case \"single_play\":");
    gold.append("\n        {");
    gold.append("\n          ArrayList<RTxCardDecision> __array_single_play = new ArrayList<>();");
    gold.append("\n          if (__reader.startArray()) {");
    gold.append("\n            while (__reader.notEndOfArray()) {");
    gold.append("\n              __array_single_play.add(new RTxCardDecision(__reader));");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n          return __array_single_play.toArray(new RTxCardDecision[__array_single_play.size()]);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n    __queue_leader.clear();");
    gold.append("\n    __queue_pass_channel.clear();");
    gold.append("\n    __queue_single_play.clear();");
    gold.append("\n  }");
    gold.append("\n  private void __step_lobby() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(5);");
    gold.append("\n    RTxLeaderActionMessage decision = leader.fetch(owner.get()).await();");
    gold.append("\n    __track(6);");
    gold.append("\n    if (decision.action == 1 && !ready.get()) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(7);");
    gold.append("\n      NtList<RxBoolean> _auto_28 = (players.iterate(false).where(true, new __CLOSURE_WhereClause7(decision))).transform((item) -> item.playing);");
    gold.append("\n      for (RxBoolean _auto_29 : _auto_28) {");
    gold.append("\n        _auto_29.set(true);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (decision.action == 2) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(8);");
    gold.append("\n      NtList<RxBoolean> _auto_30 = (players.iterate(false).where(true, new __CLOSURE_WhereClause8(decision))).transform((item) -> item.playing);");
    gold.append("\n      for (RxBoolean _auto_31 : _auto_30) {");
    gold.append("\n        _auto_31.set(false);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (decision.action == 3) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(9);");
    gold.append("\n      NtList<RxInt32> _auto_32 = (players.iterate(false).where(true, new __CLOSURE_WhereClause9())).transform((item) -> item.play_order);");
    gold.append("\n      for (RxInt32 _auto_33 : _auto_32) {");
    gold.append("\n        _auto_33.set(__randomInt());");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (decision.action == 10) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(10);");
    gold.append("\n      playing.set(true);");
    gold.append("\n      __track(11);");
    gold.append("\n      if ((players.iterate(false).where(true, new __CLOSURE_WhereClause10())).size() == 4) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(12);");
    gold.append("\n        __transitionStateMachine(\"setup\", 0);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(13);");
    gold.append("\n    __transitionStateMachine(\"lobby\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_setup() {");
    gold.append("\n    __code_cost += 6;");
    gold.append("\n    __track(14);");
    gold.append("\n    for(Integer s : __ALL_VALUES_Suit) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(15);");
    gold.append("\n      for(Integer r : __ALL_VALUES_Rank) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(16);");
    gold.append("\n        {");
    gold.append("\n          RxTable<RTxCard> _AutoRef34 = deck;");
    gold.append("\n          RTx_AnonObjConvert_2 _AutoExpr36 = new RTx_AnonObjConvert_2(1, r, s);");
    gold.append("\n          RTxCard _CreateRef35 = _AutoRef34.make();");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          _CreateRef35.place.set(_AutoExpr36.place);");
    gold.append("\n          _CreateRef35.rank.set(_AutoExpr36.rank);");
    gold.append("\n          _CreateRef35.suit.set(_AutoExpr36.suit);");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(17);");
    gold.append("\n    NtList<RxInt32> _auto_37 = (players.iterate(false).where(true, new __CLOSURE_WhereClause11())).transform((item) -> item.play_order);");
    gold.append("\n    for (RxInt32 _auto_38 : _auto_37) {");
    gold.append("\n      _auto_38.set(100);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(18);");
    gold.append("\n    int normativeOrder = 0;");
    gold.append("\n    __track(19);");
    gold.append("\n    NtList<RxInt32> _auto_39 = (players.iterate(false).where(false, new __CLOSURE_WhereClause12()).orderBy(true, __ORDER_Player_play_order_a)).transform((item) -> item.play_order);");
    gold.append("\n    for (RxInt32 _auto_40 : _auto_39) {");
    gold.append("\n      _auto_40.set(normativeOrder++);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(20);");
    gold.append("\n    __transitionStateMachine(\"shuffle_and_distribute\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_shuffle_and_distribute() {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(21);");
    gold.append("\n    NtList<RxInt32> _auto_41 = (deck.iterate(true)).transform((item) -> item.ordering);");
    gold.append("\n    for (RxInt32 _auto_42 : _auto_41) {");
    gold.append("\n      _auto_42.set(__randomInt());");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(22);");
    gold.append("\n    NtList<RxClient> _auto_43 = (deck.iterate(true)).transform((item) -> item.owner);");
    gold.append("\n    for (RxClient _auto_44 : _auto_43) {");
    gold.append("\n      _auto_44.set(NtClient.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(23);");
    gold.append("\n    NtList<RxInt32> _auto_45 = (deck.iterate(true)).transform((item) -> item.place);");
    gold.append("\n    for (RxInt32 _auto_46 : _auto_45) {");
    gold.append("\n      _auto_46.set(2);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(24);");
    gold.append("\n    RTxPlayer[] op = (players.iterate(false).where(false, new __CLOSURE_WhereClause13()).orderBy(true, __ORDER_Player_play_order_a)).toArray((Integer __n) -> (Object) (new RTxPlayer[__n]));");
    gold.append("\n    __track(25);");
    gold.append("\n    {");
    gold.append("\n      int k = 0;");
    gold.append("\n      for (;__goodwill(225, 18, 225, 23) && (k < 4);k++) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(26);");
    gold.append("\n        NtMaybe<RTxPlayer> _AutoConditionplayer_47;");
    gold.append("\n        if ((_AutoConditionplayer_47 = Utility.lookup(op, k)).has()) {");
    gold.append("\n          RTxPlayer player = _AutoConditionplayer_47.get();");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          __track(27);");
    gold.append("\n          NtList<RxClient> _auto_48 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause14()).orderBy(false, __ORDER_Card_ordering_a).skipAndLimit(true, 0, 13)).transform((item) -> item.owner);");
    gold.append("\n          for (RxClient _auto_49 : _auto_48) {");
    gold.append("\n            _auto_49.set(player.link.get());");
    gold.append("\n          }");
    gold.append("\n");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(28);");
    gold.append("\n    __transitionStateMachine(\"pass\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_pass() {");
    gold.append("\n    __code_cost += 13;");
    gold.append("\n    __track(29);");
    gold.append("\n    if (passing_mode.get() == 3) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(30);");
    gold.append("\n      __transitionStateMachine(\"start_play\", 0);");
    gold.append("\n    }");
    gold.append("\n    __track(31);");
    gold.append("\n    RTxPlayer[] op = (players.iterate(false).where(false, new __CLOSURE_WhereClause15()).orderBy(true, __ORDER_Player_play_order_a)).toArray((Integer __n) -> (Object) (new RTxPlayer[__n]));");
    gold.append("\n    __track(32);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_50;");
    gold.append("\n    if ((_AutoConditionplayer_50 = Utility.lookup(op, 0)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_50.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(33);");
    gold.append("\n      player1.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(34);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_51;");
    gold.append("\n    if ((_AutoConditionplayer_51 = Utility.lookup(op, 1)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_51.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(35);");
    gold.append("\n      player2.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(36);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_52;");
    gold.append("\n    if ((_AutoConditionplayer_52 = Utility.lookup(op, 2)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_52.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(37);");
    gold.append("\n      player3.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(38);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_53;");
    gold.append("\n    if ((_AutoConditionplayer_53 = Utility.lookup(op, 3)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_53.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(39);");
    gold.append("\n      player4.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(40);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass1 = pass_channel.choose(player1.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause16(player1)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(41);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass2 = pass_channel.choose(player2.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause17(player2)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(42);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass3 = pass_channel.choose(player3.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause18(player3)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(43);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass4 = pass_channel.choose(player4.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause19(player4)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(44);");
    gold.append("\n    NtMaybe<RTxCardDecision[]> _AutoConditiondecision1_54;");
    gold.append("\n    if ((_AutoConditiondecision1_54 = pass1.await()).has()) {");
    gold.append("\n      RTxCardDecision[] decision1 = _AutoConditiondecision1_54.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(45);");
    gold.append("\n      NtMaybe<RTxCardDecision[]> _AutoConditiondecision2_55;");
    gold.append("\n      if ((_AutoConditiondecision2_55 = pass2.await()).has()) {");
    gold.append("\n        RTxCardDecision[] decision2 = _AutoConditiondecision2_55.get();");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(46);");
    gold.append("\n        NtMaybe<RTxCardDecision[]> _AutoConditiondecision3_56;");
    gold.append("\n        if ((_AutoConditiondecision3_56 = pass3.await()).has()) {");
    gold.append("\n          RTxCardDecision[] decision3 = _AutoConditiondecision3_56.get();");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          __track(47);");
    gold.append("\n          NtMaybe<RTxCardDecision[]> _AutoConditiondecision4_57;");
    gold.append("\n          if ((_AutoConditiondecision4_57 = pass4.await()).has()) {");
    gold.append("\n            RTxCardDecision[] decision4 = _AutoConditiondecision4_57.get();");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(48);");
    gold.append("\n            if (passing_mode.get() == 2) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(49);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(50);");
    gold.append("\n                NtList<RxClient> _auto_58 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause20(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_59 : _auto_58) {");
    gold.append("\n                  _auto_59.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(51);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(52);");
    gold.append("\n                NtList<RxClient> _auto_60 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause21(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_61 : _auto_60) {");
    gold.append("\n                  _auto_61.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(53);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(54);");
    gold.append("\n                NtList<RxClient> _auto_62 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause22(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_63 : _auto_62) {");
    gold.append("\n                  _auto_63.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(55);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(56);");
    gold.append("\n                NtList<RxClient> _auto_64 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause23(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_65 : _auto_64) {");
    gold.append("\n                  _auto_65.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            } else if (passing_mode.get() == 1) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(57);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(58);");
    gold.append("\n                NtList<RxClient> _auto_66 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause24(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_67 : _auto_66) {");
    gold.append("\n                  _auto_67.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(59);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(60);");
    gold.append("\n                NtList<RxClient> _auto_68 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause25(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_69 : _auto_68) {");
    gold.append("\n                  _auto_69.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(61);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(62);");
    gold.append("\n                NtList<RxClient> _auto_70 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause26(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_71 : _auto_70) {");
    gold.append("\n                  _auto_71.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(63);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(64);");
    gold.append("\n                NtList<RxClient> _auto_72 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause27(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_73 : _auto_72) {");
    gold.append("\n                  _auto_73.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            } else if (passing_mode.get() == 0) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(65);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(66);");
    gold.append("\n                NtList<RxClient> _auto_74 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause28(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_75 : _auto_74) {");
    gold.append("\n                  _auto_75.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(67);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(68);");
    gold.append("\n                NtList<RxClient> _auto_76 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause29(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_77 : _auto_76) {");
    gold.append("\n                  _auto_77.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(69);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(70);");
    gold.append("\n                NtList<RxClient> _auto_78 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause30(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_79 : _auto_78) {");
    gold.append("\n                  _auto_79.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(71);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(72);");
    gold.append("\n                NtList<RxClient> _auto_80 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause31(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxClient _auto_81 : _auto_80) {");
    gold.append("\n                  _auto_81.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(73);");
    gold.append("\n    __transitionStateMachine(\"start_play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_start_play() {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(74);");
    gold.append("\n    played.set(0);");
    gold.append("\n    __track(75);");
    gold.append("\n    current.set(player1.get());");
    gold.append("\n    __track(76);");
    gold.append("\n    NtMaybe<RTxCard> _AutoConditiontwo_clubs_82;");
    gold.append("\n    if ((_AutoConditiontwo_clubs_82 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause32())).lookup(0)).has()) {");
    gold.append("\n      RTxCard two_clubs = _AutoConditiontwo_clubs_82.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(77);");
    gold.append("\n      current.set(two_clubs.owner.get());");
    gold.append("\n    }");
    gold.append("\n    __track(78);");
    gold.append("\n    __transitionStateMachine(\"play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_play() {");
    gold.append("\n    __code_cost += 8;");
    gold.append("\n    __track(79);");
    gold.append("\n    NtList<RTxCard> choices = deck.iterate(false).where(true, new __CLOSURE_WhereClause34(current, played, points_played, suit_in_play));");
    gold.append("\n    __track(80);");
    gold.append("\n    if (choices.get().size() == 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(81);");
    gold.append("\n      choices = deck.iterate(false).where(true, new __CLOSURE_WhereClause35(current));");
    gold.append("\n    }");
    gold.append("\n    __track(82);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> playX = single_play.choose(current.get(), Utility.convertMultiple(choices.get(), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 1);");
    gold.append("\n    __track(83);");
    gold.append("\n    NtMaybe<RTxCardDecision[]> _AutoConditionthePlay_83;");
    gold.append("\n    if ((_AutoConditionthePlay_83 = playX.await()).has()) {");
    gold.append("\n      RTxCardDecision[] thePlay = _AutoConditionthePlay_83.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(84);");
    gold.append("\n      for(RTxCardDecision dec : thePlay) {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(85);");
    gold.append("\n        NtList<RxInt32> _auto_84 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause36(dec))).transform((item) -> item.place);");
    gold.append("\n        for (RxInt32 _auto_85 : _auto_84) {");
    gold.append("\n          _auto_85.set(3);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n        __track(86);");
    gold.append("\n        NtMaybe<RTxCard> _AutoConditioncardPlayed_86;");
    gold.append("\n        if ((_AutoConditioncardPlayed_86 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause37(dec))).lookup(0)).has()) {");
    gold.append("\n          RTxCard cardPlayed = _AutoConditioncardPlayed_86.get();");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(87);");
    gold.append("\n          if (cardPlayed.points.get() > 0) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(88);");
    gold.append("\n            points_played.set(true);");
    gold.append("\n          }");
    gold.append("\n          __track(89);");
    gold.append("\n          if (played.get() == 0) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(90);");
    gold.append("\n            suit_in_play.set(cardPlayed.suit.get());");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(91);");
    gold.append("\n    if ((current.get().equals(player1.get()))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(92);");
    gold.append("\n      current.set(player2.get());");
    gold.append("\n    } else if ((current.get().equals(player2.get()))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(93);");
    gold.append("\n      current.set(player3.get());");
    gold.append("\n    } else if ((current.get().equals(player3.get()))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(94);");
    gold.append("\n      current.set(player4.get());");
    gold.append("\n    } else if ((current.get().equals(player4.get()))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(95);");
    gold.append("\n      current.set(player1.get());");
    gold.append("\n    }");
    gold.append("\n    __track(96);");
    gold.append("\n    if (played.get() == 3) {");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n      __track(97);");
    gold.append("\n      NtMaybe<RTxCard> _AutoConditionwinner_87;");
    gold.append("\n      if ((_AutoConditionwinner_87 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause38(suit_in_play)).orderBy(true, __ORDER_Card_rank_d)).lookup(0)).has()) {");
    gold.append("\n        RTxCard winner = _AutoConditionwinner_87.get();");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(98);");
    gold.append("\n        NtList<RxClient> _auto_88 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause39())).transform((item) -> item.owner);");
    gold.append("\n        for (RxClient _auto_89 : _auto_88) {");
    gold.append("\n          _auto_89.set(winner.owner.get());");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n        __track(99);");
    gold.append("\n        last_winner.set(winner.owner.get());");
    gold.append("\n      }");
    gold.append("\n      __track(100);");
    gold.append("\n      NtList<RxInt32> _auto_90 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause40())).transform((item) -> item.place);");
    gold.append("\n      for (RxInt32 _auto_91 : _auto_90) {");
    gold.append("\n        _auto_91.set(4);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n      __track(101);");
    gold.append("\n      played.set(0);");
    gold.append("\n      __track(102);");
    gold.append("\n      current.set(last_winner.get());");
    gold.append("\n      __track(103);");
    gold.append("\n      if ((deck.iterate(false).where(true, new __CLOSURE_WhereClause41(current))).size() == 0) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(104);");
    gold.append("\n        __transitionStateMachine(\"score\", 0);");
    gold.append("\n      }");
    gold.append("\n    } else {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(105);");
    gold.append("\n      played.bumpUpPost();");
    gold.append("\n    }");
    gold.append("\n    __track(106);");
    gold.append("\n    __transitionStateMachine(\"play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_score() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(107);");
    gold.append("\n    for(RTxPlayer p : players.iterate(false).where(true, new __CLOSURE_WhereClause42())) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(108);");
    gold.append("\n      int local_points = 0;");
    gold.append("\n      __track(109);");
    gold.append("\n      for(RTxCard c : deck.iterate(false).where(true, new __CLOSURE_WhereClause43(p))) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(110);");
    gold.append("\n        local_points += c.points.get();");
    gold.append("\n      }");
    gold.append("\n      __track(111);");
    gold.append("\n      if (local_points == 26) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(112);");
    gold.append("\n        for(RTxPlayer p2 : players.iterate(false).where(true, new __CLOSURE_WhereClause44(p))) {");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(113);");
    gold.append("\n          p2.points.opAddTo(26);");
    gold.append("\n          __track(114);");
    gold.append("\n          points_awarded.opAddTo(26);");
    gold.append("\n        }");
    gold.append("\n      } else {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(115);");
    gold.append("\n        p.points.opAddTo(local_points);");
    gold.append("\n        __track(116);");
    gold.append("\n        points_awarded.opAddTo(local_points);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(117);");
    gold.append("\n    if (passing_mode.get() == 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(118);");
    gold.append("\n      passing_mode.set(2);");
    gold.append("\n    } else if (passing_mode.get() == 2) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(119);");
    gold.append("\n      passing_mode.set(1);");
    gold.append("\n    } else if (passing_mode.get() == 1) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(120);");
    gold.append("\n      passing_mode.set(3);");
    gold.append("\n    } else if (passing_mode.get() == 3) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(121);");
    gold.append("\n      passing_mode.set(0);");
    gold.append("\n    }");
    gold.append("\n    __track(122);");
    gold.append("\n    __transitionStateMachine(\"shuffle_and_distribute\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"lobby\":");
    gold.append("\n        __step_lobby();");
    gold.append("\n        return;");
    gold.append("\n      case \"setup\":");
    gold.append("\n        __step_setup();");
    gold.append("\n        return;");
    gold.append("\n      case \"shuffle_and_distribute\":");
    gold.append("\n        __step_shuffle_and_distribute();");
    gold.append("\n        return;");
    gold.append("\n      case \"pass\":");
    gold.append("\n        __step_pass();");
    gold.append("\n        return;");
    gold.append("\n      case \"start_play\":");
    gold.append("\n        __step_start_play();");
    gold.append("\n        return;");
    gold.append("\n      case \"play\":");
    gold.append("\n        __step_play();");
    gold.append("\n        return;");
    gold.append("\n      case \"score\":");
    gold.append("\n        __step_score();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(NtClient cv){");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(123);");
    gold.append("\n    if ((owner.get().equals(NtClient.NO_ONE))) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(124);");
    gold.append("\n      owner.set(cv);");
    gold.append("\n      __track(125);");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxPlayer> _AutoRef92 = players;");
    gold.append("\n        RTx_AnonObjConvert_0 _AutoExpr94 = new RTx_AnonObjConvert_0(true, cv, 0, true, 0);");
    gold.append("\n        RTxPlayer _CreateRef93 = _AutoRef92.make();");
    gold.append("\n        __code_cost += 5;");
    gold.append("\n        _CreateRef93.leader.set(_AutoExpr94.leader);");
    gold.append("\n        _CreateRef93.link.set(_AutoExpr94.link);");
    gold.append("\n        _CreateRef93.play_order.set(_AutoExpr94.play_order);");
    gold.append("\n        _CreateRef93.playing.set(_AutoExpr94.playing);");
    gold.append("\n        _CreateRef93.points.set(_AutoExpr94.points);");
    gold.append("\n      }");
    gold.append("\n      __track(126);");
    gold.append("\n      __transitionStateMachine(\"lobby\", 0);");
    gold.append("\n    }");
    gold.append("\n    __track(127);");
    gold.append("\n    if ((owner.get().equals(cv))) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(128);");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    __track(129);");
    gold.append("\n    if ((players.iterate(false).where(true, new __CLOSURE_WhereClause2(cv))).size() == 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(130);");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxPlayer> _AutoRef95 = players;");
    gold.append("\n        RTx_AnonObjConvert_0 _AutoExpr97 = new RTx_AnonObjConvert_0(false, cv, players.size(), false, 0);");
    gold.append("\n        RTxPlayer _CreateRef96 = _AutoRef95.make();");
    gold.append("\n        __code_cost += 5;");
    gold.append("\n        _CreateRef96.leader.set(_AutoExpr97.leader);");
    gold.append("\n        _CreateRef96.link.set(_AutoExpr97.link);");
    gold.append("\n        _CreateRef96.play_order.set(_AutoExpr97.play_order);");
    gold.append("\n        _CreateRef96.playing.set(_AutoExpr97.playing);");
    gold.append("\n        _CreateRef96.points.set(_AutoExpr97.points);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(131);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public void __onDisconnected__0(NtClient cv) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(132);");
    gold.append("\n    (players.iterate(false).where(true, new __CLOSURE_WhereClause3(cv))).map((__item) -> { __item.__delete(); });");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {");
    gold.append("\n    __onDisconnected__0(__cvalue);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, NtMessageBase message) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause1 implements WhereClause<RTxCard> {");
    gold.append("\n    private NtClient who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, who.hashCode(), 2, 4};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause1(NtClient who) {");
    gold.append("\n      this.who = who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 4 && (owner.equals(who));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause2 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private NtClient cv;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, cv.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause2(NtClient cv) {");
    gold.append("\n      this.cv = cv;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      NtClient link = __obj.link.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (link.equals(cv));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause3 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private NtClient cv;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, cv.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause3(NtClient cv) {");
    gold.append("\n      this.cv = cv;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      NtClient link = __obj.link.get();");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (link.equals(cv)) && !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause4 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause5 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause6 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause7 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxLeaderActionMessage decision;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return decision.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause7(RTxLeaderActionMessage decision) {");
    gold.append("\n      this.decision = decision;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == decision.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause8 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxLeaderActionMessage decision;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return decision.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause8(RTxLeaderActionMessage decision) {");
    gold.append("\n      this.decision = decision;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == decision.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause9 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause10 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause11 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause12 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause13 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause14 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, NtClient.NO_ONE.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(NtClient.NO_ONE));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause15 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause16 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient player1;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player1.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause16(RxClient player1) {");
    gold.append("\n      this.player1 = player1;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(player1.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause17 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient player2;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player2.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause17(RxClient player2) {");
    gold.append("\n      this.player2 = player2;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(player2.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause18 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient player3;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player3.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause18(RxClient player3) {");
    gold.append("\n      this.player3 = player3;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(player3.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause19 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient player4;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player4.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause19(RxClient player4) {");
    gold.append("\n      this.player4 = player4;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(player4.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause20 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause20(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause21 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause21(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause22 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause22(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause23 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause23(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause24 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause24(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause25 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause25(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause26 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause26(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause27 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause27(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause28 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause28(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause29 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause29(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause30 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause30(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause31 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause31(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause32 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {3, 2, 4, 1};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int rank = __obj.rank.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return rank == 2 && suit == 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause33 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause34 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient current;");
    gold.append("\n    private RxInt32 played;");
    gold.append("\n    private RxBoolean points_played;");
    gold.append("\n    private RxInt32 suit_in_play;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, current.get().hashCode(), 2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause34(RxClient current, RxInt32 played, RxBoolean points_played, RxInt32 suit_in_play) {");
    gold.append("\n      this.current = current;");
    gold.append("\n      this.played = played;");
    gold.append("\n      this.points_played = points_played;");
    gold.append("\n      this.suit_in_play = suit_in_play;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      int points = __obj.points.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(current.get())) && place == 2 && (played.get() == 0 && (points_played.get() || points == 0) || played.get() > 0 && suit_in_play.get() == suit);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause35 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient current;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, current.get().hashCode(), 2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause35(RxClient current) {");
    gold.append("\n      this.current = current;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(current.get())) && place == 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause36 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause36(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause37 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause37(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause38 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxInt32 suit_in_play;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3, 4, suit_in_play.get()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause38(RxInt32 suit_in_play) {");
    gold.append("\n      this.suit_in_play = suit_in_play;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3 && suit == suit_in_play.get();");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause39 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause40 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause41 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxClient current;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, current.get().hashCode(), 2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause41(RxClient current) {");
    gold.append("\n      this.current = current;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(current.get())) && place == 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause42 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause43 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxPlayer p;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, p.link.get().hashCode(), 2, 4};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause43(RTxPlayer p) {");
    gold.append("\n      this.p = p;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtClient owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner.equals(p.link.get())) && place == 4;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause44 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxPlayer p;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause44(RTxPlayer p) {");
    gold.append("\n      this.p = p;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      NtClient link = __obj.link.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing && !(link.equals(p.link.get()));");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_ordering_a = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return __a.ordering.compareTo(__b.ordering);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_rank_d = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return -__a.rank.compareTo(__b.rank);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxPlayer> __ORDER_Player_play_order_a = new Comparator<RTxPlayer>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxPlayer __a, RTxPlayer __b) {");
    gold.append("\n      return __a.play_order.compareTo(__b.play_order);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"25\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"}}-->{\"__state\":\"lobby\",\"__next_time\":\"25\",\"__seq\":1,\"__connection_id\":1,\"__time\":\"25\",\"players\":{\"auto_key\":1,\"rows\":{\"0\":{\"playing\":true,\"leader\":true}}},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}} need:true in:0");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"50\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}-->{\"__state\":\"lobby\",\"__next_time\":\"50\",\"__seq\":2,\"__connection_id\":2,\"__time\":\"50\",\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"auto_key\":2,\"rows\":{\"1\":{\"id\":1,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"leader\":true}}},\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}} need:true in:0");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"players_connected\":2,\"observers_connected\":0,\"people\":{\"0\":{\"id\":0,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"points\":0,\"leader\":true,\"play_order\":0},\"1\":{\"id\":1,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0},\"@o\":[\"0\",\"1\"]},\"players_ordered\":{\"0\":{\"id\":0,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"points\":0,\"leader\":true,\"play_order\":0},\"1\":{\"id\":1,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0},\"@o\":[\"0\",\"1\"]},\"ready\":false,\"playing\":false,\"passing_mode\":0,\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0},\"outstanding\":[],\"blockers\":[{\"agent\":\"rando\",\"authority\":\"random-place\"}],\"seq\":2}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"players_connected\":2,\"observers_connected\":0,\"people\":{\"0\":{\"id\":0,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"points\":0},\"1\":{\"id\":1,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[\"0\",\"1\"]},\"players_ordered\":{\"0\":{\"id\":0,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"points\":0},\"1\":{\"id\":1,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[\"0\",\"1\"]},\"ready\":false,\"playing\":false,\"passing_mode\":0,\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0},\"outstanding\":[{\"id\":1,\"channel\":\"leader\"}],\"blockers\":[{\"agent\":\"rando\",\"authority\":\"random-place\"}],\"seq\":2}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__seedUsed\":\"0\",\"__blocked_on\":\"leader\",\"__blocked\":true,\"__seq\":3} need:false in:0");
    gold.append("\n{\"command\":\"bill\",\"timestamp\":\"100\"}-->{\"__goodwill_used\":0,\"__cost\":112,\"__billing_seq\":3} need:true in:0");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__constructed\":true,\"__entropy\":\"0\",\"__state\":\"lobby\",\"__next_time\":\"50\",\"__seq\":3,\"__connection_id\":2,\"__time\":\"50\",\"players\":{\"auto_key\":2,\"rows\":{\"0\":{\"playing\":true,\"leader\":true},\"1\":{\"id\":1,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"leader\":true}}},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"__seedUsed\":\"0\",\"__blocked_on\":\"leader\",\"__blocked\":true,\"__goodwill_used\":0,\"__cost\":112,\"__billing_seq\":3}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"deck\":{\"auto_key\":0,\"rows\":{}},\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"auto_key\":2,\"rows\":{\"0\":{\"id\":0,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0},\"1\":{\"id\":1,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}}},\"playing\":false,\"passing_mode\":0,\"player1\":{\"agent\":\"?\",\"authority\":\"?\"},\"player2\":{\"agent\":\"?\",\"authority\":\"?\"},\"player3\":{\"agent\":\"?\",\"authority\":\"?\"},\"player4\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"__state\":\"lobby\",\"__constructed\":true,\"__next_time\":\"50\",\"__blocked\":true,\"__seq\":3,\"__entropy\":\"0\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"100\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"deck\":{\"auto_key\":0,\"rows\":{}},\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"auto_key\":2,\"rows\":{\"0\":{\"id\":0,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0},\"1\":{\"id\":1,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}}},\"playing\":false,\"passing_mode\":0,\"player1\":{\"agent\":\"?\",\"authority\":\"?\"},\"player2\":{\"agent\":\"?\",\"authority\":\"?\"},\"player3\":{\"agent\":\"?\",\"authority\":\"?\"},\"player4\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"__state\":\"lobby\",\"__constructed\":true,\"__next_time\":\"50\",\"__blocked\":true,\"__seq\":3,\"__entropy\":\"0\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"100\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_ServiceHandler_3 = null;
  private String get_ServiceHandler_3() {
    if (cached_ServiceHandler_3 != null) {
      return cached_ServiceHandler_3;
    }
    cached_ServiceHandler_3 = generateTestOutput(true, "ServiceHandler_3", "./test_code/Demo_ServiceHandler_success.a");
    return cached_ServiceHandler_3;
  }

  @Test
  public void testServiceHandlerEmission() {
    assertEmissionGood(get_ServiceHandler_3());
  }

  @Test
  public void testServiceHandlerSuccess() {
    assertLivePass(get_ServiceHandler_3());
  }

  @Test
  public void testServiceHandlerGoodWillHappy() {
    assertGoodWillHappy(get_ServiceHandler_3());
  }

  @Test
  public void testServiceHandlerExceptionFree() {
    assertExceptionFree(get_ServiceHandler_3());
  }

  @Test
  public void testServiceHandlerTODOFree() {
    assertTODOFree(get_ServiceHandler_3());
  }

  @Test
  public void stable_ServiceHandler_3() {
    String live = get_ServiceHandler_3();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:./test_code/Demo_ServiceHandler_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[ ]");
    gold.append("\n--JAVA---------------------------------------------");
    gold.append("\nimport com.fasterxml.jackson.databind.JsonNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ArrayNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ObjectNode;");
    gold.append("\nimport org.adamalang.runtime.*;");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class ServiceHandler_3 extends LivingDocument {");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  public ServiceHandler_3(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __writer) {");
    gold.append("\n    __state.__commit(\"__state\", __writer);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __writer);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __writer);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __writer);");
    gold.append("\n    __seq.__commit(\"__seq\", __writer);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __writer);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __writer);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __writer);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __writer);");
    gold.append("\n    __time.__commit(\"__time\", __writer);");
    gold.append("\n    x.__commit(\"x\", __writer);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaServiceHandler_3 {");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaServiceHandler_3() {");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(ServiceHandler_3 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Consumer<String> __updates) {");
    gold.append("\n    ServiceHandler_3 __self = this;");
    gold.append("\n    DeltaServiceHandler_3 __state = new DeltaServiceHandler_3();");
    gold.append("\n    return new PrivateView(__who, __updates) {");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTxM implements NtMessageBase {");
    gold.append("\n    private int dx = 0;");
    gold.append("\n    private RTxM(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"dx\":");
    gold.append("\n              this.dx = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"dx\");");
    gold.append("\n      __writer.writeInteger(dx);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxM() {}");
    gold.append("\n    private RTxM(int dx) {");
    gold.append("\n      this.dx = dx;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxM {");
    gold.append("\n    private DInt32 __ddx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxM() {");
    gold.append("\n      __ddx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxM __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __ddx.show(__item.dx, __obj.planField(\"dx\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_change(NtClient client, RTxM m) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    x.opAddTo(m.dx);");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_change(__task.who, (RTxM)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        return new RTxM(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public boolean __onConnected__0(NtClient who){");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(1);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    x.set(123);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\",\"x\":123} need:true in:0");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"25\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"}}-->{\"__seq\":1,\"__connection_id\":1,\"__time\":\"25\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}} need:true in:0");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"50\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}-->{\"__seq\":2,\"__connection_id\":2,\"__time\":\"50\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}} need:true in:0");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":123},\"outstanding\":[],\"blockers\":[],\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":123},\"outstanding\":[],\"blockers\":[],\"seq\":3}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seedUsed\":\"0\",\"__seq\":3,\"__entropy\":\"-4962768465676381896\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n{\"command\":\"bill\",\"timestamp\":\"100\"}-->{\"__goodwill_used\":0,\"__cost\":8,\"__billing_seq\":3} need:true in:0");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"x\":123,\"__seq\":3,\"__connection_id\":2,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__seedUsed\":\"0\",\"__goodwill_used\":0,\"__cost\":8,\"__billing_seq\":3}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x\":123,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__blocked\":false,\"__seq\":3,\"__entropy\":\"-4962768465676381896\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"100\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"x\":123,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__blocked\":false,\"__seq\":3,\"__entropy\":\"-4962768465676381896\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"100\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Spreadsheet_4 = null;
  private String get_Spreadsheet_4() {
    if (cached_Spreadsheet_4 != null) {
      return cached_Spreadsheet_4;
    }
    cached_Spreadsheet_4 = generateTestOutput(true, "Spreadsheet_4", "./test_code/Demo_Spreadsheet_success.a");
    return cached_Spreadsheet_4;
  }

  @Test
  public void testSpreadsheetEmission() {
    assertEmissionGood(get_Spreadsheet_4());
  }

  @Test
  public void testSpreadsheetSuccess() {
    assertLivePass(get_Spreadsheet_4());
  }

  @Test
  public void testSpreadsheetGoodWillHappy() {
    assertGoodWillHappy(get_Spreadsheet_4());
  }

  @Test
  public void testSpreadsheetExceptionFree() {
    assertExceptionFree(get_Spreadsheet_4());
  }

  @Test
  public void testSpreadsheetTODOFree() {
    assertTODOFree(get_Spreadsheet_4());
  }

  @Test
  public void stable_Spreadsheet_4() {
    String live = get_Spreadsheet_4();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:./test_code/Demo_Spreadsheet_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[ ]");
    gold.append("\n--JAVA---------------------------------------------");
    gold.append("\nimport com.fasterxml.jackson.databind.JsonNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ArrayNode;");
    gold.append("\nimport com.fasterxml.jackson.databind.node.ObjectNode;");
    gold.append("\nimport org.adamalang.runtime.*;");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class Spreadsheet_4 extends LivingDocument {");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  private final RxInt32 y;");
    gold.append("\n  private final RxDouble d;");
    gold.append("\n  private final RxBoolean b;");
    gold.append("\n  private final RxString name;");
    gold.append("\n  private final RxLazy<Integer> z;");
    gold.append("\n  private final RxLazy<Double> z2;");
    gold.append("\n  private final RxLazy<String> namex2;");
    gold.append("\n  private final RxLazy<Integer> name_len;");
    gold.append("\n  private final RxLazy<Boolean> bz;");
    gold.append("\n  private final RxLazy<Boolean> baz;");
    gold.append("\n  private final RxLazy<Boolean> baz2;");
    gold.append("\n  private final RxDouble c1;");
    gold.append("\n  private final RxDouble c2;");
    gold.append("\n  private final RxInt32 s;");
    gold.append("\n  public Spreadsheet_4(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x = new RxInt32(this, 0);");
    gold.append("\n    y = new RxInt32(this, 0);");
    gold.append("\n    d = new RxDouble(this, 0.0);");
    gold.append("\n    b = new RxBoolean(this, false);");
    gold.append("\n    name = new RxString(this, \"\");");
    gold.append("\n    z = new RxLazy<Integer>(this, () -> (x.get() + y.get()));");
    gold.append("\n    x.__subscribe(z);");
    gold.append("\n    y.__subscribe(z);");
    gold.append("\n    z2 = new RxLazy<Double>(this, () -> ((b.get() ? x.get() : y.get()) * d.get()));");
    gold.append("\n    b.__subscribe(z2);");
    gold.append("\n    x.__subscribe(z2);");
    gold.append("\n    y.__subscribe(z2);");
    gold.append("\n    d.__subscribe(z2);");
    gold.append("\n    namex2 = new RxLazy<String>(this, () -> (name.get() + name.get()));");
    gold.append("\n    name.__subscribe(namex2);");
    gold.append("\n    name_len = new RxLazy<Integer>(this, () -> (namex2.get().length()));");
    gold.append("\n    namex2.__subscribe(name_len);");
    gold.append("\n    bz = new RxLazy<Boolean>(this, () -> (name_len.get() > 100));");
    gold.append("\n    name_len.__subscribe(bz);");
    gold.append("\n    baz = new RxLazy<Boolean>(this, () -> (!bz.get()));");
    gold.append("\n    bz.__subscribe(baz);");
    gold.append("\n    baz2 = new RxLazy<Boolean>(this, () -> (!baz.get()));");
    gold.append("\n    baz.__subscribe(baz2);");
    gold.append("\n    c1 = new RxDouble(this, 0.0);");
    gold.append("\n    c2 = new RxDouble(this, 0.0);");
    gold.append("\n    s = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            y.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"d\":");
    gold.append("\n            d.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"b\":");
    gold.append("\n            b.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c1\":");
    gold.append("\n            c1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c2\":");
    gold.append("\n            c2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"s\":");
    gold.append("\n            s.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n    y.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"d\");");
    gold.append("\n    d.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"b\");");
    gold.append("\n    b.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n    name.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"c1\");");
    gold.append("\n    c1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"c2\");");
    gold.append("\n    c2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"s\");");
    gold.append("\n    s.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __writer) {");
    gold.append("\n    __state.__commit(\"__state\", __writer);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __writer);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __writer);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __writer);");
    gold.append("\n    __seq.__commit(\"__seq\", __writer);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __writer);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __writer);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __writer);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __writer);");
    gold.append("\n    __time.__commit(\"__time\", __writer);");
    gold.append("\n    x.__commit(\"x\", __writer);");
    gold.append("\n    y.__commit(\"y\", __writer);");
    gold.append("\n    d.__commit(\"d\", __writer);");
    gold.append("\n    b.__commit(\"b\", __writer);");
    gold.append("\n    name.__commit(\"name\", __writer);");
    gold.append("\n    c1.__commit(\"c1\", __writer);");
    gold.append("\n    c2.__commit(\"c2\", __writer);");
    gold.append("\n    s.__commit(\"s\", __writer);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    y.__revert();");
    gold.append("\n    d.__revert();");
    gold.append("\n    b.__revert();");
    gold.append("\n    name.__revert();");
    gold.append("\n    c1.__revert();");
    gold.append("\n    c2.__revert();");
    gold.append("\n    s.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaSpreadsheet_4 {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaSpreadsheet_4() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(Spreadsheet_4 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Consumer<String> __updates) {");
    gold.append("\n    Spreadsheet_4 __self = this;");
    gold.append("\n    DeltaSpreadsheet_4 __state = new DeltaSpreadsheet_4();");
    gold.append("\n    return new PrivateView(__who, __updates) {");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  private void __step_next() {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(0);");
    gold.append("\n    name.set(\"12345678901234567890123456789012345678901234567890 x \");");
    gold.append("\n    __track(1);");
    gold.append("\n    d.set(3.14);");
    gold.append("\n    __track(2);");
    gold.append("\n    b.set(false);");
    gold.append("\n    __track(3);");
    gold.append("\n    x.set(5);");
    gold.append("\n    __track(4);");
    gold.append("\n    y.set(10);");
    gold.append("\n    __track(5);");
    gold.append("\n    __transitionStateMachine(\"end\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 9;");
    gold.append("\n    __track(6);");
    gold.append("\n    x.set(0);");
    gold.append("\n    __track(7);");
    gold.append("\n    y.set(1);");
    gold.append("\n    __track(8);");
    gold.append("\n    s.set(z.get());");
    gold.append("\n    __track(9);");
    gold.append("\n    d.set(3.14);");
    gold.append("\n    __track(10);");
    gold.append("\n    b.set(true);");
    gold.append("\n    __track(11);");
    gold.append("\n    c1.set(z2.get());");
    gold.append("\n    __track(12);");
    gold.append("\n    b.set(false);");
    gold.append("\n    __track(13);");
    gold.append("\n    c2.set(z2.get());");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"next\":");
    gold.append("\n        __step_next();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(14);");
    gold.append("\n    x.set(2);");
    gold.append("\n    __track(15);");
    gold.append("\n    y.set(3);");
    gold.append("\n    __track(16);");
    gold.append("\n    d.set(1.5);");
    gold.append("\n    __track(17);");
    gold.append("\n    b.set(true);");
    gold.append("\n    __track(18);");
    gold.append("\n    name.set(\"Jack Jillian\");");
    gold.append("\n    __track(19);");
    gold.append("\n    __transitionStateMachine(\"next\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__state\":\"next\",\"__constructed\":true,\"__entropy\":\"0\",\"x\":2,\"y\":3,\"d\":1.5,\"b\":true,\"name\":\"Jack Jillian\"} need:true in:0");
    gold.append("\nNO_ONE was DENIED:5011");
    gold.append("\nRANDO was DENIED:5011");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":1}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":1}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seedUsed\":\"0\",\"__state\":\"end\",\"__next_time\":\"25\",\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\",\"x\":5,\"y\":10,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \"} need:true in:0");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":2}");
    gold.append("\n+ RANDO DELTA:{\"data\":{},\"outstanding\":[],\"blockers\":[],\"seq\":2}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seedUsed\":\"-4962768465676381896\",\"__state\":\"\",\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\",\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"c1\":0.0,\"c2\":3.14,\"s\":1} need:false in:-25");
    gold.append("\n{\"command\":\"bill\",\"timestamp\":\"75\"}-->{\"__goodwill_used\":0,\"__cost\":23,\"__billing_seq\":2} need:true in:0");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__entropy\":\"4804307197456638271\",\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"__seedUsed\":\"-4962768465676381896\",\"__next_time\":\"25\",\"__seq\":2,\"__time\":\"50\",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__goodwill_used\":0,\"__cost\":23,\"__billing_seq\":2}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"25\",\"__blocked\":false,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"75\"}");
    gold.append("\n{\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"25\",\"__blocked\":false,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"75\"}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
}
